{"ast":null,"code":"var _jsxFileName = \"/home/vusa/Wala_Digital/dashboard/src/views/donors/ManageDonorListView/Donors.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Button, Box, Card, Chip, Checkbox, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, FormGroup, Grid, InputLabel, Select, MenuItem, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, TextField, makeStyles } from '@material-ui/core';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\nimport axios from 'axios';\nconst token = localStorage.jwt;\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\n\nconst Donors = ({\n  className,\n  bloodDonors,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const [open, setOpen] = React.useState(false);\n  const [state, setState] = React.useState('');\n\n  const resetSelectedIDs = () => {\n    setSelectedCustomerIds([]);\n  };\n\n  const handleChange = event => {\n    setState(event.target.value);\n  };\n\n  const handleClickOpen = (event, id) => {\n    handleSelectOne(event, id);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    resetSelectedIDs();\n  };\n\n  const handleSubmit = props => {\n    let formData = new FormData(document.getElementById(\"updateMultiple\"));\n    var object = {};\n    formData.forEach(function (value, key) {\n      object[key] = value;\n    });\n    console.log(object);\n\n    for (let i in selectedCustomerIds) {\n      console.log(`${i}: `, selectedCustomerIds);\n      axios({\n        method: 'PUT',\n        url: `http://localhost:1337/blood-donors/${selectedCustomerIds[i]}`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        data: object\n      }) //handle success\n      .then(response => {\n        const donor = response.data;\n        console.log(donor);\n        handleClose();\n        window.location.reload();\n      }) //handle error\n      .catch(error => console.error(`Error: ${error}`));\n    }\n  };\n\n  const handleSelectAll = event => {\n    let newSelectedCustomerIds;\n\n    if (event.target.checked) {\n      newSelectedCustomerIds = bloodDonors.map(customer => customer.id);\n    } else {\n      newSelectedCustomerIds = [];\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomerIds.indexOf(id);\n    let newSelectedCustomerIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, selectedIndex), selectedCustomerIds.slice(selectedIndex + 1));\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n    console.log('Selected IDs: ', newSelectedCustomerIds);\n  };\n\n  const handleLimitChange = event => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const displayTable = bloodDonors => {\n    const {\n      firstName,\n      lastName,\n      bloodGroup,\n      email,\n      phone,\n      previousPregnancies,\n      previousTransfusions,\n      previousReactions\n    } = state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n      my: 3,\n      mx: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      encType: \"multipart/form-data\",\n      onSubmit: handleSubmit,\n      method: \"post\",\n      id: \"updateMultiple\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }, \"Update A Donor\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, \"To update a Donor, please enter the Donor information here.\"), /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      className: classes.formControl,\n      id: \"donorForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"firstName\",\n      label: \"NEW First Name\",\n      name: \"firstName\",\n      type: \"text\",\n      value: firstName,\n      onChange: handleChange,\n      className: classes.textField,\n      InputLabelProps: {\n        shrink: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"lastName\",\n      label: \"NEW Last Name\",\n      name: \"lastName\",\n      type: \"text\",\n      value: lastName,\n      onChange: handleChange,\n      className: classes.textField,\n      InputLabelProps: {\n        shrink: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      id: \"bloodGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 29\n      }\n    }, \"NEW Blood Group\"), /*#__PURE__*/React.createElement(Select, {\n      lableId: \"bloodGroup\",\n      id: \"bloodGroup\",\n      label: \"NEW Blood Group\",\n      name: \"bloodGroup\",\n      type: \"text\",\n      value: bloodGroup,\n      onChange: handleChange,\n      InputLabelProps: {\n        shrink: false\n      },\n      style: {\n        width: '75%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'A-',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 31\n      }\n    }, \"A-\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'A+',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 31\n      }\n    }, \"A+\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'B-',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 31\n      }\n    }, \"B-\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'B+',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 31\n      }\n    }, \"B+\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'AB-',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 31\n      }\n    }, \"AB-\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'AB+',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 31\n      }\n    }, \"AB+\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'O-',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 31\n      }\n    }, \"O-\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'O+',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 31\n      }\n    }, \"O+\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      label: \"NEW Email\",\n      name: \"email\",\n      type: \"text\",\n      value: email,\n      onChange: handleChange,\n      className: classes.textField,\n      InputLabelProps: {\n        shrink: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"phone\",\n      label: \"NEW Phone\",\n      name: \"phone\",\n      type: \"text\",\n      value: phone,\n      onChange: handleChange,\n      className: classes.textField,\n      InputLabelProps: {\n        shrink: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      id: \"previousPregnancies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 29\n      }\n    }, \"Previous Pregnancies\"), /*#__PURE__*/React.createElement(Select, {\n      lableId: \"previousPregnancies\",\n      id: \"previousPregnancies\",\n      label: \"Previous Pregnancies\",\n      name: \"previousPregnancies\",\n      type: \"text\",\n      value: previousPregnancies,\n      onChange: handleChange,\n      InputLabelProps: {\n        shrink: false\n      },\n      style: {\n        width: '75%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'true',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 31\n      }\n    }, \"True\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'false',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 31\n      }\n    }, \"False\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      id: \"previousTransfusions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 29\n      }\n    }, \"Previous Transfusions\"), /*#__PURE__*/React.createElement(Select, {\n      lableId: \"previousTransfusions\",\n      id: \"previousTransfusions\",\n      label: \"Previous Transfusionss\",\n      name: \"previousTransfusions\",\n      type: \"text\",\n      value: previousTransfusions,\n      onChange: handleChange,\n      InputLabelProps: {\n        shrink: false\n      },\n      style: {\n        width: '75%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'true',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 31\n      }\n    }, \"True\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'false',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 31\n      }\n    }, \"False\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      id: \"previousReactions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 29\n      }\n    }, \"Previous Reactions\"), /*#__PURE__*/React.createElement(Select, {\n      lableId: \"previousReactions\",\n      id: \"previousReactions\",\n      label: \"Previous Reactions\",\n      name: \"previousReactions\",\n      type: \"text\",\n      value: previousReactions,\n      onChange: handleChange,\n      InputLabelProps: {\n        shrink: false\n      },\n      style: {\n        width: '75%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'true',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 31\n      }\n    }, \"True\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'false',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 31\n      }\n    }, \"False\"))))))), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: handleClose,\n      color: \"primary\",\n      form: \"updateMultipleForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 21\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: handleSubmit,\n      color: \"primary\",\n      type: \"submit\",\n      form: \"updateMultipleForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 21\n      }\n    }, \"Submit\")))))), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: selectedCustomerIds.length === bloodDonors.length,\n      color: \"primary\",\n      indeterminate: selectedCustomerIds.length > 0 && selectedCustomerIds.length < bloodDonors.length,\n      onChange: handleSelectAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 13\n      }\n    }, \"Action\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 13\n      }\n    }, \"Donor ID\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 13\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 13\n      }\n    }, \"Email Address\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 13\n      }\n    }, \"Blood Group\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 13\n      }\n    }, \"Phone Number\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }\n    }, \"Previous Transfusions\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 13\n      }\n    }, \"Previous Reactions\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }\n    }, bloodDonors.slice(page * limit, page * limit + limit).map(bloodDonor => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      key: bloodDonor.id,\n      selected: selectedCustomerIds.indexOf(bloodDonor.id) !== -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: selectedCustomerIds.indexOf(bloodDonor.id) !== -1,\n      onChange: event => handleSelectOne(event, bloodDonor.id),\n      value: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      icon: /*#__PURE__*/React.createElement(OpenInBrowserIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 29\n        }\n      }),\n      label: \"Update\",\n      color: \"secondary\",\n      onClick: event => {\n        handleClickOpen(event, bloodDonor.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 15\n      }\n    }, bloodDonor.id.slice(17)), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 15\n      }\n    }, bloodDonor.firstName + \" \" + bloodDonor.lastName), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 15\n      }\n    }, bloodDonor.email), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 15\n      }\n    }, bloodDonor.bloodGroup), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 15\n      }\n    }, bloodDonor.phone), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 15\n      }\n    }, bloodDonor.previousTransfusions), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 15\n      }\n    }, bloodDonor.previousReactions)))))));\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    minWidth: 1050,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 9\n    }\n  }, displayTable(bloodDonors))), /*#__PURE__*/React.createElement(TablePagination, {\n    component: \"div\",\n    count: bloodDonors.length,\n    onChangePage: handlePageChange,\n    onChangeRowsPerPage: handleLimitChange,\n    page: page,\n    rowsPerPage: limit,\n    rowsPerPageOptions: [5, 10, 25, 50, 100],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }\n  }));\n};\n\nDonors.propTypes = {\n  className: PropTypes.string\n};\nexport default Donors;","map":{"version":3,"sources":["/home/vusa/Wala_Digital/dashboard/src/views/donors/ManageDonorListView/Donors.js"],"names":["React","useState","clsx","PropTypes","PerfectScrollbar","Button","Box","Card","Chip","Checkbox","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","FormGroup","Grid","InputLabel","Select","MenuItem","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TextField","makeStyles","OpenInBrowserIcon","axios","token","localStorage","jwt","useStyles","theme","root","avatar","marginRight","spacing","formControl","margin","minWidth","Donors","className","bloodDonors","rest","classes","selectedCustomerIds","setSelectedCustomerIds","limit","setLimit","page","setPage","open","setOpen","state","setState","resetSelectedIDs","handleChange","event","target","value","handleClickOpen","id","handleSelectOne","handleClose","handleSubmit","props","formData","FormData","document","getElementById","object","forEach","key","console","log","i","method","url","headers","Authorization","data","then","response","donor","window","location","reload","catch","error","handleSelectAll","newSelectedCustomerIds","checked","map","customer","selectedIndex","indexOf","concat","slice","length","handleLimitChange","handlePageChange","newPage","displayTable","firstName","lastName","bloodGroup","email","phone","previousPregnancies","previousTransfusions","previousReactions","textField","shrink","width","bloodDonor","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Button,\n  Box,\n  Card,\n  Chip,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormGroup,\n  Grid,\n  InputLabel,\n  Select,\n  MenuItem,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  makeStyles,\n} from '@material-ui/core';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\n\nimport axios from 'axios';\n\nconst token = localStorage.jwt;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  }\n}));\n\nconst Donors = ({ className, bloodDonors, ...rest }) => {\n  const classes = useStyles();\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const [open, setOpen] = React.useState(false);\n  const [state, setState] = React.useState('');\n\n\n  const resetSelectedIDs = () => {\n    setSelectedCustomerIds([]);\n  }\n  \n  const handleChange = (event) => {\n    setState(event.target.value);\n  };\n\n  const handleClickOpen = (event, id) => {\n    handleSelectOne(event,id);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    resetSelectedIDs();\n  };\n\n  const handleSubmit = (props) => {\n    let formData =  new FormData(document.getElementById(\"updateMultiple\"));\n    var object = {};\n    formData.forEach(function(value, key){\n        object[key] = value;\n    });\n    console.log(object);\n\n        for(let i in selectedCustomerIds){\n          console.log(`${i}: `,selectedCustomerIds);\n          axios({\n            method: 'PUT',\n            url: `http://localhost:1337/blood-donors/${selectedCustomerIds[i]}`,\n            headers: {\n              Authorization: `Bearer ${token}`\n            },\n            data: object\n          })\n          //handle success\n          .then((response) => {\n            const donor = response.data;\n            console.log(donor);\n            handleClose();\n            window.location.reload();      \n          })\n          //handle error\n          .catch(error => console.error(`Error: ${error}`));\n        }\n  };\n\n  const handleSelectAll = (event) => {\n    let newSelectedCustomerIds;\n\n    if (event.target.checked) {\n      newSelectedCustomerIds = bloodDonors.map((customer) => customer.id);\n    } else {\n      newSelectedCustomerIds = [];\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomerIds.indexOf(id);\n    let newSelectedCustomerIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\n        selectedCustomerIds.slice(0, selectedIndex),\n        selectedCustomerIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n    console.log('Selected IDs: ', newSelectedCustomerIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const displayTable = (bloodDonors) => {\n    const { firstName,lastName, bloodGroup, email, phone, previousPregnancies, previousTransfusions, previousReactions } = state\n\n    return (\n      <>\n        <Box my={3} mx={3}>\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n              <form encType=\"multipart/form-data\" onSubmit={handleSubmit}  method=\"post\" id=\"updateMultiple\">\n                <FormGroup>\n                  <DialogTitle id=\"form-dialog-title\">Update A Donor</DialogTitle>\n                  <DialogContent>\n                    <DialogContentText>\n                      To update a Donor, please enter the Donor information here.\n                    </DialogContentText>\n                    <FormControl required className={classes.formControl} id=\"donorForm\">\n                      <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                          <TextField\n                            id=\"firstName\"\n                            label=\"NEW First Name\"\n                            name=\"firstName\"\n                            type=\"text\"\n                            value={firstName}\n                            onChange={handleChange}\n                            className={classes.textField}\n                            InputLabelProps={{\n                              shrink: true,\n                            }}\n                          />\n                        </Grid>\n                        <Grid item xs={6}>\n                          <TextField\n                            id=\"lastName\"\n                            label=\"NEW Last Name\"\n                            name=\"lastName\"\n                            type=\"text\"\n                            value={lastName}\n                            onChange={handleChange}\n                            className={classes.textField}\n                            InputLabelProps={{\n                              shrink: true,\n                            }}\n                          />\n                        </Grid>\n                        <Grid item xs={6}>\n                          <FormControl required style={{ width: '100%'}}>\n                            <InputLabel shrink id=\"bloodGroup\">\n                            NEW Blood Group\n                            </InputLabel>\n                            <Select\n                                lableId=\"bloodGroup\"\n                                id=\"bloodGroup\"\n                                label=\"NEW Blood Group\"\n                                name=\"bloodGroup\"\n                                type=\"text\"\n                                value={bloodGroup}\n                                onChange={handleChange}\n                                InputLabelProps={{\n                                  shrink: false,\n                                }}\n                                style={{ width: '75%'}}\n                              >\n                              <MenuItem value={'A-'}>A-</MenuItem>\n                              <MenuItem value={'A+'}>A+</MenuItem>\n                              <MenuItem value={'B-'}>B-</MenuItem>\n                              <MenuItem value={'B+'}>B+</MenuItem>\n                              <MenuItem value={'AB-'}>AB-</MenuItem>\n                              <MenuItem value={'AB+'}>AB+</MenuItem>\n                              <MenuItem value={'O-'}>O-</MenuItem>\n                              <MenuItem value={'O+'}>O+</MenuItem>\n                            </Select>\n                          </FormControl>\n                        </Grid>\n                        <Grid item xs={6}>\n                          <TextField\n                            id=\"email\"\n                            label=\"NEW Email\"\n                            name=\"email\"\n                            type=\"text\"\n                            value={email}\n                            onChange={handleChange}\n                            className={classes.textField}\n                            InputLabelProps={{\n                              shrink: true,\n                            }}\n                          />\n                        </Grid>\n                          <Grid item xs={6}>\n                          <TextField\n                            id=\"phone\"\n                            label=\"NEW Phone\"\n                            name=\"phone\"\n                            type=\"text\"\n                            value={phone}\n                            onChange={handleChange}\n                            className={classes.textField}\n                            InputLabelProps={{\n                              shrink: true,\n                            }}\n                          />\n                        </Grid>\n                        <Grid item xs={6}>\n                          <FormControl required style={{ width: '100%'}}>\n                            <InputLabel shrink id=\"previousPregnancies\">\n                            Previous Pregnancies\n                            </InputLabel>\n                            <Select\n                                lableId=\"previousPregnancies\"\n                                id=\"previousPregnancies\"\n                                label=\"Previous Pregnancies\"\n                                name=\"previousPregnancies\"\n                                type=\"text\"\n                                value={previousPregnancies}\n                                onChange={handleChange}\n                                InputLabelProps={{\n                                  shrink: false,\n                                }}\n                                style={{ width: '75%'}}\n                              >\n                              <MenuItem value={'true'}>True</MenuItem>\n                              <MenuItem value={'false'}>False</MenuItem>\n                            </Select>\n                          </FormControl>\n                        </Grid>\n                        <Grid item xs={6}>\n                          <FormControl required style={{ width: '100%'}}>\n                            <InputLabel shrink id=\"previousTransfusions\">\n                            Previous Transfusions\n                            </InputLabel>\n                            <Select\n                                lableId=\"previousTransfusions\"\n                                id=\"previousTransfusions\"\n                                label=\"Previous Transfusionss\"\n                                name=\"previousTransfusions\"\n                                type=\"text\"\n                                value={previousTransfusions}\n                                onChange={handleChange}\n                                InputLabelProps={{\n                                  shrink: false,\n                                }}\n                                style={{ width: '75%'}}\n                              >\n                              <MenuItem value={'true'}>True</MenuItem>\n                              <MenuItem value={'false'}>False</MenuItem>\n                            </Select>\n                          </FormControl>\n                        </Grid>\n                        <Grid item xs={6}>\n                          <FormControl required style={{ width: '100%'}}>\n                            <InputLabel shrink id=\"previousReactions\">\n                            Previous Reactions\n                            </InputLabel>\n                            <Select\n                                lableId=\"previousReactions\"\n                                id=\"previousReactions\"\n                                label=\"Previous Reactions\"\n                                name=\"previousReactions\"\n                                type=\"text\"\n                                value={previousReactions}\n                                onChange={handleChange}\n                                InputLabelProps={{\n                                  shrink: false,\n                                }}\n                                style={{ width: '75%'}}\n                              >\n                              <MenuItem value={'true'}>True</MenuItem>\n                              <MenuItem value={'false'}>False</MenuItem>\n                            </Select>\n                          </FormControl>\n                        </Grid>\n                      </Grid>\n                    </FormControl>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" form=\"updateMultipleForm\">\n                      Cancel\n                    </Button>\n                    <Button onClick={handleSubmit} color=\"primary\" type=\"submit\" form=\"updateMultipleForm\">\n                      Submit\n                    </Button>\n                  </DialogActions>\n                </FormGroup>\n              </form>\n            </Dialog>\n        </Box>\n      <Table>\n      <TableHead>\n          <TableRow>\n            <TableCell padding=\"checkbox\">\n              <Checkbox\n                checked={selectedCustomerIds.length === bloodDonors.length}\n                color=\"primary\"\n                indeterminate={\n                  selectedCustomerIds.length > 0\n                  && selectedCustomerIds.length < bloodDonors.length\n                }\n                onChange={handleSelectAll}\n              />\n            </TableCell>\n            <TableCell>\n            Action\n            </TableCell>\n            <TableCell>\n            Donor ID\n            </TableCell>\n            <TableCell>\n            First Name\n            </TableCell>\n            <TableCell>\n            Email Address\n            </TableCell>\n            <TableCell>\n            Blood Group\n            </TableCell>\n            <TableCell>\n            Phone Number\n            </TableCell>\n            <TableCell>\n            Previous Transfusions\n            </TableCell>\n            <TableCell>\n            Previous Reactions\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        {bloodDonors\n        .slice(page * limit, page * limit + limit)\n        .map((bloodDonor) => (\n          <>\n            <TableRow\n              hover\n              key={bloodDonor.id}\n              selected={selectedCustomerIds.indexOf(bloodDonor.id) !== -1}\n            >\n              <TableCell padding=\"checkbox\">\n                <Checkbox\n                  checked={selectedCustomerIds.indexOf(bloodDonor.id) !== -1}\n                  onChange={(event) => handleSelectOne(event, bloodDonor.id)}\n                  value=\"true\"\n                />\n              </TableCell>\n              <TableCell>\n                <Chip icon={<OpenInBrowserIcon />} label=\"Update\" color=\"secondary\" onClick={(event) => {handleClickOpen(event,bloodDonor.id)}}/>\n              </TableCell>\n              <TableCell>\n                {bloodDonor.id.slice(17)}\n              </TableCell>\n              <TableCell>\n                {bloodDonor.firstName + \" \" + bloodDonor.lastName}\n              </TableCell>\n              <TableCell>\n                {bloodDonor.email}\n              </TableCell>\n              <TableCell>\n                {bloodDonor.bloodGroup}\n              </TableCell>\n              <TableCell>\n                {bloodDonor.phone}\n              </TableCell>\n              <TableCell>\n                {bloodDonor.previousTransfusions}\n              </TableCell>\n              <TableCell>\n                {bloodDonor.previousReactions}\n              </TableCell>\n            </TableRow>\n            </>\n          ))}\n        </TableBody>\n      </Table>\n      </>\n    )\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <PerfectScrollbar>\n        <Box minWidth={1050}>\n          {displayTable(bloodDonors)}\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={bloodDonors.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25, 50, 100]}\n      />\n    </Card>\n  );\n};\n\nDonors.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Donors;\n"]},"metadata":{},"sourceType":"module"}