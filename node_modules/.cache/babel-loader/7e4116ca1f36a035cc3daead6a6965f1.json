{"ast":null,"code":"var _jsxFileName = \"/home/vusa/Portfolio/Healthcare-App/src/views/network/NetworkListView/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Box, Container, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport axios from 'axios';\nimport Network from './Network';\nconst token = localStorage.getItem(\"jwt\");\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst BLOODGROUPS = ['A%2B', 'A-', 'B%2B', 'B-', 'AB%2B', 'AB-', 'O%2B', 'O-'];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  productCard: {\n    height: '100%'\n  },\n  box: {\n    margin: theme.spacing(4)\n  }\n}));\n\nconst NetworkListView = () => {\n  const classes = useStyles();\n  const [otherBloodBanks, setOtherBloodBanks] = useState([]);\n  const [otherBloodUnitCounts, setOtherBloodUnitCounts] = useState([]);\n  useEffect(() => {\n    makeRow();\n  }, []);\n\n  const makeRow = async () => {\n    var row = [];\n    var rows = []; //get banks\n\n    const responseBanks = await axios.get(`http://localhost:1337/bloodbanks?id_ne=${user.bloodBank.id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }); //handle success\n    //loop through each bank\n\n    for (var bank of responseBanks.data) {\n      row = []; //push bank  to row\n\n      row.push(bank); //get count of each blood group\n\n      for (var bldGrp of BLOODGROUPS) {\n        const responseCount = await axios.get(`http://localhost:1337/bloodsupplies/count?bloodBank.id=${bank.id}&bloodDonor.bloodGroup=${bldGrp}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }); //push count to row\n\n        row.push({\n          bloodGroup: bldGrp,\n          count: responseCount.data\n        });\n      } //push array to rows array\n\n\n      rows.push(row);\n    }\n\n    setOtherBloodBanks(rows);\n  };\n\n  return /*#__PURE__*/React.createElement(Page, {\n    className: classes.root,\n    title: \"Network\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Network, {\n    counts: otherBloodUnitCounts,\n    banks: otherBloodBanks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default NetworkListView;","map":{"version":3,"sources":["/home/vusa/Portfolio/Healthcare-App/src/views/network/NetworkListView/index.js"],"names":["React","useState","useEffect","Box","Container","makeStyles","Page","axios","Network","token","localStorage","getItem","user","JSON","parse","BLOODGROUPS","useStyles","theme","root","backgroundColor","palette","background","dark","minHeight","paddingBottom","spacing","paddingTop","productCard","height","box","margin","NetworkListView","classes","otherBloodBanks","setOtherBloodBanks","otherBloodUnitCounts","setOtherBloodUnitCounts","makeRow","row","rows","responseBanks","get","bloodBank","id","headers","Authorization","bank","data","push","bldGrp","responseCount","bloodGroup","count"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport axios from 'axios';\nimport Network from './Network';\n\n\nconst token = localStorage.getItem(\"jwt\");\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst BLOODGROUPS = ['A%2B', 'A-','B%2B', 'B-', 'AB%2B', 'AB-', 'O%2B', 'O-'];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  productCard: {\n    height: '100%',\n  },\n  box: {\n    margin: theme.spacing(4)\n  }\n}));\n\nconst NetworkListView = () => {\n  const classes = useStyles();\n  const [otherBloodBanks, setOtherBloodBanks] = useState([]);\n  const [otherBloodUnitCounts, setOtherBloodUnitCounts] = useState([]);\n\n  useEffect(() => {\n    makeRow();\n  }, []);\n\n  const makeRow = async () => {\n    var row = [];\n    var rows = [];\n    //get banks\n    const responseBanks = await axios.get(`http://localhost:1337/bloodbanks?id_ne=${user.bloodBank.id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    //handle success\n    //loop through each bank\n    for (var bank of responseBanks.data) {\n      row = [];\n      //push bank  to row\n      row.push(bank);\n      //get count of each blood group\n      for(var bldGrp of BLOODGROUPS){\n        const responseCount = await axios.get(`http://localhost:1337/bloodsupplies/count?bloodBank.id=${bank.id}&bloodDonor.bloodGroup=${bldGrp}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        //push count to row\n        row.push({bloodGroup: bldGrp, count: responseCount.data});\n      }\n        //push array to rows array\n        rows.push(row);\n    }\n    setOtherBloodBanks(rows);\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Network\"\n    >\n      <Container maxWidth={false}>\n        {/* <Toolbar bloodDonors={bloodDonors}/> */}\n        <Box mt={3}>\n          <Network counts={otherBloodUnitCounts} banks={otherBloodBanks} />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default NetworkListView;\n"]},"metadata":{},"sourceType":"module"}