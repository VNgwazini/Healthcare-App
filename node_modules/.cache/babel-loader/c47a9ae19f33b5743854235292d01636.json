{"ast":null,"code":"var _jsxFileName = \"/home/vusa/Wala_Digital/dashboard/src/views/network/NetworkListView/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Box, Container, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport axios from 'axios';\nimport Network from './Network';\nconst token = localStorage.getItem(\"jwt\");\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst BLOODTYPES = ['A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+', 'O-'];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  productCard: {\n    height: '100%'\n  },\n  box: {\n    margin: theme.spacing(4)\n  }\n}));\n\nconst NetworkListView = () => {\n  const classes = useStyles();\n  const [networkData, setNetworkData] = useState([]);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    //get banks\n    const responseBanks = await axios.get(`http://ec2-35-180-116-27.eu-west-3.compute.amazonaws.com:1337/bloodbanks?id_ne=${user.bloodBank.id}&_sort=name:ASC`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    var banks = responseBanks.data;\n    const responseCount = await axios.get(`http://ec2-35-180-116-27.eu-west-3.compute.amazonaws.com:1337/bloodsupplies/count`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const totalCount = responseCount.data; //get ALL supplies (have to loop bc of strapi GET limit = 100)\n\n    const currentDate = new Date();\n    var supplies = [];\n\n    for (var i = 0; i < totalCount / 100; i++) {\n      const start = 100 * i;\n      const response = await axios.get(`http://ec2-35-180-116-27.eu-west-3.compute.amazonaws.com:1337/bloodsupplies?expiration_gt=${currentDate.toISOString()}&usage=unassigned&_start=${start}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      supplies = supplies.concat(response.data);\n    }\n\n    var row = [];\n    var oldNetwork = [];\n\n    for (var bank of banks) {\n      row = [];\n      row.push(bank.name);\n\n      for (var type of BLOODTYPES) {\n        var result = supplies.filter(unit => unit.bloodDonor.bloodGroup === type && unit.bloodBank.id === bank.id);\n        row.push(result.length);\n      }\n\n      oldNetwork.push(row);\n    }\n\n    setNetworkData(oldNetwork);\n    console.log(networkData);\n  };\n\n  return /*#__PURE__*/React.createElement(Page, {\n    className: classes.root,\n    title: \"Network\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Network, {\n    network: networkData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default NetworkListView;","map":{"version":3,"sources":["/home/vusa/Wala_Digital/dashboard/src/views/network/NetworkListView/index.js"],"names":["React","useState","useEffect","Box","Container","makeStyles","Page","axios","Network","token","localStorage","getItem","user","JSON","parse","BLOODTYPES","useStyles","theme","root","backgroundColor","palette","background","dark","minHeight","paddingBottom","spacing","paddingTop","productCard","height","box","margin","NetworkListView","classes","networkData","setNetworkData","getData","responseBanks","get","bloodBank","id","headers","Authorization","banks","data","responseCount","totalCount","currentDate","Date","supplies","i","start","response","toISOString","concat","row","oldNetwork","bank","push","name","type","result","filter","unit","bloodDonor","bloodGroup","length","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport axios from 'axios';\nimport Network from './Network';\n\n\nconst token = localStorage.getItem(\"jwt\");\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst BLOODTYPES = ['A+', 'A-','B+', 'B-', 'AB+', 'AB-', 'O+', 'O-'];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  productCard: {\n    height: '100%',\n  },\n  box: {\n    margin: theme.spacing(4)\n  }\n}));\n\nconst NetworkListView = () => {\n  const classes = useStyles();\n  const [networkData, setNetworkData] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    //get banks\n    const responseBanks = await axios.get(`http://ec2-35-180-116-27.eu-west-3.compute.amazonaws.com:1337/bloodbanks?id_ne=${user.bloodBank.id}&_sort=name:ASC`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    var banks = responseBanks.data;\n\n    const responseCount = await axios.get(`http://ec2-35-180-116-27.eu-west-3.compute.amazonaws.com:1337/bloodsupplies/count`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    const totalCount = responseCount.data;\n\n    //get ALL supplies (have to loop bc of strapi GET limit = 100)\n    const currentDate = new Date();\n    var supplies = [];\n    for (var i = 0; i < totalCount/100; i++) {\n      const start = 100 * i;\n      const response = await axios.get(`http://ec2-35-180-116-27.eu-west-3.compute.amazonaws.com:1337/bloodsupplies?expiration_gt=${currentDate.toISOString()}&usage=unassigned&_start=${start}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      supplies = supplies.concat(response.data);\n    }\n\n    var row = [];\n    var oldNetwork = [];\n    for (var bank of banks) {\n      row = [];\n      row.push(bank.name);\n      for (var type of BLOODTYPES) {\n        var result = supplies.filter(unit => unit.bloodDonor.bloodGroup === type && unit.bloodBank.id === bank.id);\n        row.push(result.length);\n      }\n      oldNetwork.push(row);\n    }\n    setNetworkData(oldNetwork);\n    console.log(networkData);\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Network\"\n    >\n      <Container maxWidth={false}>\n        {/* <Toolbar bloodDonors={bloodDonors}/> */}\n        <Box mt={3}>\n          <Network network={networkData} />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default NetworkListView;\n"]},"metadata":{},"sourceType":"module"}