{"ast":null,"code":"var _jsxFileName = \"/home/vusa/Wala_Digital/dashboard/src/views/network/NetworkListView/Network.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Card, CardContent, CardHeader, Divider, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, makeStyles } from '@material-ui/core';\nimport axios from 'axios';\nconst token = localStorage.getItem(\"jwt\");\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Network = ({\n  className,\n  banks,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleLimitChange = event => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const displayTable = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: \"5%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"Bank Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: \"1%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"A+\"), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: \"1%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"A-\"), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: \"1%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"B+\"), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: \"1%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"B-\"), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: \"1%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"AB+\"), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: \"1%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"AB-\"), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: \"1%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"O+\"), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: \"1%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"O-\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, banks.slice(page * limit, page * limit + limit).map((bank, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      key: bank.id,\n      selected: selectedCustomerIds.indexOf(bank.id) !== -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, bank[0].name), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, bank[1].count), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, bank[2].count), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, bank[3].count), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, bank[4].count), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, bank[5].count), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, bank[6].count), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, bank[7].count), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, bank[8].count)))))));\n  };\n\n  var isLoaded = false;\n\n  for (var obj of banks) {\n    if (obj) {\n      isLoaded = true;\n    } else {\n      isLoaded = false;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    minWidth: 1050,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, displayTable())), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/static/loading.gif\",\n    alt: \"Loading...\",\n    style: isLoaded ? {\n      display: \"none\"\n    } : {\n      display: \"block\",\n      margin: \"auto\",\n      height: \"400px\",\n      width: \"50%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TablePagination, {\n    component: \"div\",\n    count: banks.length,\n    onChangePage: handlePageChange,\n    onChangeRowsPerPage: handleLimitChange,\n    page: page,\n    rowsPerPage: limit,\n    rowsPerPageOptions: [5, 10, 25, 50, 100],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  })));\n};\n\nNetwork.propTypes = {\n  className: PropTypes.string\n};\nexport default Network;","map":{"version":3,"sources":["/home/vusa/Wala_Digital/dashboard/src/views/network/NetworkListView/Network.js"],"names":["React","useState","clsx","PropTypes","PerfectScrollbar","Box","Card","CardContent","CardHeader","Divider","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","makeStyles","axios","token","localStorage","getItem","user","JSON","parse","useStyles","theme","root","avatar","marginRight","spacing","Network","className","banks","rest","classes","selectedCustomerIds","setSelectedCustomerIds","limit","setLimit","page","setPage","handleLimitChange","event","target","value","handlePageChange","newPage","displayTable","width","slice","map","bank","index","id","indexOf","name","count","isLoaded","obj","display","margin","height","length","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  makeStyles,\n} from '@material-ui/core';\n\nimport axios from 'axios';\n\nconst token = localStorage.getItem(\"jwt\");\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Network = ({ className, banks, ...rest }) => {\n  const classes = useStyles();\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const displayTable = () => {\n    return (\n      <>\n      <Table>\n      <TableHead>\n          <TableRow>\n          <TableCell style={{width: \"5%\"}}>\n            Bank Name\n            </TableCell>\n            <TableCell style={{width: \"1%\"}}>\n            A+\n            </TableCell>\n            <TableCell style={{width: \"1%\"}}>\n            A-\n            </TableCell>\n            <TableCell style={{width: \"1%\"}}>\n            B+\n            </TableCell>\n            <TableCell style={{width: \"1%\"}}>\n            B-\n            </TableCell>\n            <TableCell style={{width: \"1%\"}}>\n            AB+\n            </TableCell>\n            <TableCell style={{width: \"1%\"}}>\n            AB-\n            </TableCell>\n            <TableCell style={{width: \"1%\"}}>\n            O+\n            </TableCell>\n            <TableCell style={{width: \"1%\"}}>\n            O-\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        {banks\n        .slice(page * limit, page * limit + limit)\n        .map((bank, index) => (\n          <>\n            <TableRow\n              hover\n              key={bank.id}\n              selected={selectedCustomerIds.indexOf(bank.id) !== -1}\n            >\n              <TableCell>\n                {bank[0].name}\n              </TableCell>\n              <TableCell>\n                {bank[1].count}\n              </TableCell>\n              <TableCell>\n                {bank[2].count}\n              </TableCell>\n              <TableCell>\n                {bank[3].count}\n              </TableCell>\n              <TableCell>\n                {bank[4].count}\n              </TableCell>\n              <TableCell>\n                {bank[5].count}\n              </TableCell>\n              <TableCell>\n                {bank[6].count}\n              </TableCell>\n              <TableCell>\n                {bank[7].count}\n              </TableCell>\n              <TableCell>\n                {bank[8].count}\n              </TableCell>\n            </TableRow>\n            </>\n          ))\n        }\n        </TableBody>\n      </Table>\n      </>\n    )\n  }\n\n  var isLoaded = false;\n  for (var obj of banks) {\n    if (obj) {\n      isLoaded = true;\n    }\n    else {\n      isLoaded = false;\n    }\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <PerfectScrollbar>\n          <Box minWidth={1050}>\n            {displayTable()}\n          </Box>\n        </PerfectScrollbar>\n        <img src=\"/static/loading.gif\" alt=\"Loading...\"\n          style={isLoaded ? {display: \"none\"} : {display: \"block\", margin: \"auto\", height: \"400px\", width: \"50%\"}}\n        />\n        <TablePagination\n          component=\"div\"\n          count={banks.length}\n          onChangePage={handlePageChange}\n          onChangeRowsPerPage={handleLimitChange}\n          page={page}\n          rowsPerPage={limit}\n          rowsPerPageOptions={[5, 10, 25, 50, 100]}\n        />\n      </CardContent>\n    </Card>\n  );\n};\n\nNetwork.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Network;\n"]},"metadata":{},"sourceType":"module"}