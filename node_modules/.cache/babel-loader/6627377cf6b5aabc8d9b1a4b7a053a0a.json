{"ast":null,"code":"var _jsxFileName = \"/home/vusa/Wala_Digital/dashboard/src/views/donors/ManageDonorListView/Donors.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Button, Box, Card, Chip, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, FormGroup, Grid, InputLabel, Select, MenuItem, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, TextField, makeStyles } from '@material-ui/core';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\nimport axios from 'axios';\nconst token = localStorage.jwt;\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    width: \"100%\"\n  },\n  selectField: {\n    width: \"75%\"\n  },\n  textField: {\n    width: \"75%\"\n  }\n}));\n\nconst Donors = ({\n  className,\n  bloodDonors,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const [open, setOpen] = React.useState(false);\n  const [state, setState] = React.useState('');\n\n  const resetSelectedIDs = () => {\n    setSelectedCustomerIds([]);\n  };\n\n  const handleChange = event => {\n    setState(event.target.value);\n  };\n\n  const handleClickOpen = (event, id) => {\n    handleSelectOne(event, id);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    resetSelectedIDs();\n  };\n\n  const handleSubmit = props => {\n    let formData = new FormData(document.getElementById(\"updateDonor\"));\n    var object = {};\n\n    for (var pair of formData.entries()) {\n      var key = pair[0];\n      var value = pair[1];\n      console.log(key, value);\n\n      if (value != '') {\n        object[key] = value;\n      }\n    }\n\n    console.log(object);\n\n    for (let i in selectedCustomerIds) {\n      console.log(`${i}: `, selectedCustomerIds);\n      axios({\n        method: 'PUT',\n        url: `http://localhost:1337/blood-donors/${selectedCustomerIds[i]}`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        data: object\n      }) //handle success\n      .then(response => {\n        console.log(response.data);\n        handleClose();\n        window.location.reload();\n      }) //handle error\n      .catch(error => console.error(`Error: ${error}`));\n    }\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomerIds.indexOf(id);\n    let newSelectedCustomerIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, selectedIndex), selectedCustomerIds.slice(selectedIndex + 1));\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n    console.log('Selected IDs: ', newSelectedCustomerIds);\n  };\n\n  const handleLimitChange = event => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const displayTable = bloodDonors => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n      my: 3,\n      mx: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      encType: \"multipart/form-data\",\n      onSubmit: handleSubmit,\n      method: \"post\",\n      id: \"updateDonor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      id: \"updateDonorForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }, \"Update a Donor\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, \"To update a donor, please enter the updated information here.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 84\n      }\n    }), \"Only fill out the fields that you want to update.\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"firstName\",\n      label: \"NEW First Name\",\n      name: \"firstName\",\n      type: \"text\",\n      onChange: handleChange,\n      className: classes.textField,\n      InputLabelProps: {\n        shrink: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"lastName\",\n      label: \"NEW Last Name\",\n      name: \"lastName\",\n      type: \"text\",\n      onChange: handleChange,\n      className: classes.textField,\n      InputLabelProps: {\n        shrink: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"phone\",\n      label: \"NEW Phone\",\n      name: \"phone\",\n      type: \"text\",\n      helperText: \"Only enter numbers\",\n      value: state.phone,\n      onChange: handleChange,\n      className: classes.textField,\n      InputLabelProps: {\n        shrink: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      label: \"NEW Email\",\n      name: \"email\",\n      type: \"text\",\n      value: state.email,\n      onChange: handleChange,\n      className: classes.textField,\n      InputLabelProps: {\n        shrink: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      htmlFor: \"bloodGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 29\n      }\n    }, \"NEW Blood Group\"), /*#__PURE__*/React.createElement(Select, {\n      native: true,\n      id: \"bloodGroup\",\n      onChange: handleChange,\n      className: classes.selectField,\n      inputProps: {\n        name: 'bloodGroup',\n        id: 'bloodGroup'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      \"aria-label\": \"None\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"A+\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 31\n      }\n    }, \"A+\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"A-\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 31\n      }\n    }, \"A-\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"B+\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 31\n      }\n    }, \"B+\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"B-\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 31\n      }\n    }, \"B-\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"AB+\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 31\n      }\n    }, \"AB+\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"AB-\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 31\n      }\n    }, \"AB-\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"O+\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 31\n      }\n    }, \"O+\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"O-\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 31\n      }\n    }, \"O-\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      htmlFor: \"sex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 29\n      }\n    }, \"NEW Sex\"), /*#__PURE__*/React.createElement(Select, {\n      native: true,\n      id: \"sex\",\n      onChange: handleChange,\n      className: classes.selectField,\n      inputProps: {\n        name: 'sex',\n        id: 'sex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      \"aria-label\": \"None\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"male\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 31\n      }\n    }, \"Male\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"female\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 31\n      }\n    }, \"Female\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      htmlFor: \"previousPregnancies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 29\n      }\n    }, \"NEW Prev. Pregnancies\"), /*#__PURE__*/React.createElement(Select, {\n      native: true,\n      id: \"previousPregnancies\",\n      onChange: handleChange,\n      className: classes.selectField,\n      inputProps: {\n        name: 'previousPregnancies',\n        id: 'previousPregnancies'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      \"aria-label\": \"None\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 31\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"no\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 31\n      }\n    }, \"No\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      htmlFor: \"previousTransfusions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 29\n      }\n    }, \"NEW Prev. Transfusions\"), /*#__PURE__*/React.createElement(Select, {\n      native: true,\n      id: \"previousTransfusions\",\n      onChange: handleChange,\n      className: classes.selectField,\n      inputProps: {\n        name: 'previousTransfusions',\n        id: 'previousTransfusions'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      \"aria-label\": \"None\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 31\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"no\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 31\n      }\n    }, \"No\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      htmlFor: \"previousReactions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 29\n      }\n    }, \"NEW Prev. Reactions\"), /*#__PURE__*/React.createElement(Select, {\n      native: true,\n      id: \"previousReactions\",\n      onChange: handleChange,\n      className: classes.selectField,\n      inputProps: {\n        name: 'previousReactions',\n        id: 'previousReactions'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      \"aria-label\": \"None\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 31\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"no\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 31\n      }\n    }, \"No\")))))), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: handleClose,\n      color: \"primary\",\n      form: \"updateDonorForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 21\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: handleSubmit,\n      color: \"primary\",\n      type: \"submit\",\n      form: \"updateDonorForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 21\n      }\n    }, \"Submit\")))))), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 13\n      }\n    }, \"Action\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 13\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 13\n      }\n    }, \"Phone Number\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 13\n      }\n    }, \"Email Address\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 13\n      }\n    }, \"Blood Group\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }\n    }, \"Sex\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 13\n      }\n    }, \"Previous Transfusions\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 13\n      }\n    }, \"Previous Reactions\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 13\n      }\n    }, \"Donor ID\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }\n    }, bloodDonors.slice(page * limit, page * limit + limit).map((bloodDonor, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      key: bloodDonor.id,\n      selected: selectedCustomerIds.indexOf(bloodDonor.id) !== -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      icon: /*#__PURE__*/React.createElement(OpenInBrowserIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 29\n        }\n      }),\n      label: \"Update\",\n      color: \"secondary\",\n      onClick: event => {\n        handleClickOpen(event, bloodDonor.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 15\n      }\n    }, bloodDonor.firstName + \" \" + bloodDonor.lastName), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 15\n      }\n    }, bloodDonor.phone), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 15\n      }\n    }, bloodDonor.email), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 15\n      }\n    }, bloodDonor.bloodGroup), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 15\n      }\n    }, bloodDonor.previousTransfusions), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 15\n      }\n    }, bloodDonor.previousReactions), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 15\n      }\n    }, bloodDonor.id.slice(17))))))));\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    minWidth: 1050,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 9\n    }\n  }, displayTable(bloodDonors))), /*#__PURE__*/React.createElement(TablePagination, {\n    component: \"div\",\n    count: bloodDonors.length,\n    onChangePage: handlePageChange,\n    onChangeRowsPerPage: handleLimitChange,\n    page: page,\n    rowsPerPage: limit,\n    rowsPerPageOptions: [5, 10, 25, 50, 100],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }\n  }));\n};\n\nDonors.propTypes = {\n  className: PropTypes.string\n};\nexport default Donors;","map":{"version":3,"sources":["/home/vusa/Wala_Digital/dashboard/src/views/donors/ManageDonorListView/Donors.js"],"names":["React","useState","clsx","PropTypes","PerfectScrollbar","Button","Box","Card","Chip","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","FormGroup","Grid","InputLabel","Select","MenuItem","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TextField","makeStyles","OpenInBrowserIcon","axios","token","localStorage","jwt","useStyles","theme","root","avatar","marginRight","spacing","formControl","margin","minWidth","width","selectField","textField","Donors","className","bloodDonors","rest","classes","selectedCustomerIds","setSelectedCustomerIds","limit","setLimit","page","setPage","open","setOpen","state","setState","resetSelectedIDs","handleChange","event","target","value","handleClickOpen","id","handleSelectOne","handleClose","handleSubmit","props","formData","FormData","document","getElementById","object","pair","entries","key","console","log","i","method","url","headers","Authorization","data","then","response","window","location","reload","catch","error","selectedIndex","indexOf","newSelectedCustomerIds","concat","slice","length","handleLimitChange","handlePageChange","newPage","displayTable","shrink","phone","email","name","textAlign","map","bloodDonor","index","firstName","lastName","bloodGroup","previousTransfusions","previousReactions","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Button,\n  Box,\n  Card,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormGroup,\n  Grid,\n  InputLabel,\n  Select,\n  MenuItem,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  makeStyles,\n} from '@material-ui/core';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\n\nimport axios from 'axios';\n\nconst token = localStorage.jwt;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    width: \"100%\"\n  },\n  selectField: {\n    width: \"75%\"\n  },\n  textField: {\n    width: \"75%\"\n  }\n}));\n\nconst Donors = ({ className, bloodDonors, ...rest }) => {\n  const classes = useStyles();\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const [open, setOpen] = React.useState(false);\n  const [state, setState] = React.useState('');\n\n  const resetSelectedIDs = () => {\n    setSelectedCustomerIds([]);\n  }\n  \n  const handleChange = (event) => {\n    setState(event.target.value);\n  };\n\n  const handleClickOpen = (event, id) => {\n    handleSelectOne(event, id);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    resetSelectedIDs();\n  };\n\n  const handleSubmit = (props) => {\n    let formData =  new FormData(document.getElementById(\"updateDonor\"));\n    var object = {};\n    for (var pair of formData.entries()) {\n      var key = pair[0];\n      var value = pair[1];\n      console.log(key, value);\n      if (value != '') {\n        object[key] = value;\n      }\n    }\n    console.log(object);\n\n    for(let i in selectedCustomerIds){\n      console.log(`${i}: `,selectedCustomerIds);\n      axios({\n        method: 'PUT',\n        url: `http://localhost:1337/blood-donors/${selectedCustomerIds[i]}`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        data: object\n      })\n      //handle success\n      .then((response) => {\n        console.log(response.data);\n        handleClose();\n        window.location.reload();      \n      })\n      //handle error\n      .catch(error => console.error(`Error: ${error}`));\n    }\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomerIds.indexOf(id);\n    let newSelectedCustomerIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\n        selectedCustomerIds.slice(0, selectedIndex),\n        selectedCustomerIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n    console.log('Selected IDs: ', newSelectedCustomerIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const displayTable = (bloodDonors) => {\n    return (\n      <>\n        <Box my={3} mx={3}>\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n              <form encType=\"multipart/form-data\" onSubmit={handleSubmit}  method=\"post\" id=\"updateDonor\">\n                <FormGroup id=\"updateDonorForm\">\n                  <DialogTitle id=\"form-dialog-title\">Update a Donor</DialogTitle>\n                  <DialogContent>\n                    <DialogContentText>\n                      To update a donor, please enter the updated information here.<br/>\n                      Only fill out the fields that you want to update. \n                    </DialogContentText>\n                      <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                          <FormControl className={classes.formControl}>\n                            <TextField\n                              id=\"firstName\"\n                              label=\"NEW First Name\"\n                              name=\"firstName\"\n                              type=\"text\"\n                              onChange={handleChange}\n                              className={classes.textField}\n                              InputLabelProps={{\n                                shrink: true,\n                              }}\n                            />\n                          </FormControl>\n                        </Grid>\n                        <Grid item xs={6}>\n                          <FormControl className={classes.formControl}>\n                            <TextField\n                              id=\"lastName\"\n                              label=\"NEW Last Name\"\n                              name=\"lastName\"\n                              type=\"text\"\n                              onChange={handleChange}\n                              className={classes.textField}\n                              InputLabelProps={{\n                                shrink: true,\n                              }}\n                            />\n                          </FormControl>\n                        </Grid>\n                        <Grid item xs={6}>\n                          <FormControl className={classes.formControl}>\n                            <TextField\n                              id=\"phone\"\n                              label=\"NEW Phone\"\n                              name=\"phone\"\n                              type=\"text\"\n                              helperText=\"Only enter numbers\"\n                              value={state.phone}\n                              onChange={handleChange}\n                              className={classes.textField}\n                              InputLabelProps={{\n                                shrink: true,\n                              }}\n                            />\n                          </FormControl>\n                        </Grid>\n                        <Grid item xs={6}>\n                          <FormControl className={classes.formControl}>\n                            <TextField\n                              id=\"email\"\n                              label=\"NEW Email\"\n                              name=\"email\"\n                              type=\"text\"\n                              value={state.email}\n                              onChange={handleChange}\n                              className={classes.textField}\n                              InputLabelProps={{\n                                shrink: true,\n                              }}\n                            />\n                          </FormControl>\n                        </Grid>\n                        <Grid item xs={6}>\n                          <FormControl className={classes.formControl}>\n                            <InputLabel shrink htmlFor=\"bloodGroup\">\n                              NEW Blood Group\n                            </InputLabel>\n                            <Select\n                              native\n                              id=\"bloodGroup\"\n                              onChange={handleChange}\n                              className={classes.selectField}\n                              inputProps={{\n                                name: 'bloodGroup',\n                                id: 'bloodGroup',\n                              }}\n                            >\n                              <option aria-label=\"None\" value=\"\" />\n                              <option value=\"A+\">A+</option>\n                              <option value=\"A-\">A-</option>\n                              <option value=\"B+\">B+</option>\n                              <option value=\"B-\">B-</option>\n                              <option value=\"AB+\">AB+</option>\n                              <option value=\"AB-\">AB-</option>\n                              <option value=\"O+\">O+</option>\n                              <option value=\"O-\">O-</option>\n                            </Select>\n                          </FormControl>\n                        </Grid>\n                        <Grid item xs={6}>\n                          <FormControl className={classes.formControl}>\n                            <InputLabel shrink htmlFor=\"sex\">\n                              NEW Sex\n                            </InputLabel>\n                            <Select\n                              native\n                              id=\"sex\"\n                              onChange={handleChange}\n                              className={classes.selectField}\n                              inputProps={{\n                                name: 'sex',\n                                id: 'sex',\n                              }}\n                            >\n                              <option aria-label=\"None\" value=\"\" />\n                              <option value=\"male\">Male</option>\n                              <option value=\"female\">Female</option>\n                            </Select>\n                          </FormControl>\n                        </Grid>\n                        <Grid item xs={6}>\n                          <FormControl className={classes.formControl}>\n                            <InputLabel shrink htmlFor=\"previousPregnancies\">\n                              NEW Prev. Pregnancies\n                            </InputLabel>\n                            <Select\n                              native\n                              id=\"previousPregnancies\"\n                              onChange={handleChange}\n                              className={classes.selectField}\n                              inputProps={{\n                                name: 'previousPregnancies',\n                                id: 'previousPregnancies',\n                              }}\n                            >\n                              <option aria-label=\"None\" value=\"\" />\n                              <option value=\"yes\">Yes</option>\n                              <option value=\"no\">No</option>\n                            </Select>\n                          </FormControl>\n                        </Grid>\n                        <Grid item xs={6}>\n                          <FormControl className={classes.formControl}>\n                            <InputLabel shrink htmlFor=\"previousTransfusions\">\n                             NEW Prev. Transfusions\n                            </InputLabel>\n                            <Select\n                              native\n                              id=\"previousTransfusions\"\n                              onChange={handleChange}\n                              className={classes.selectField}\n                              inputProps={{\n                                name: 'previousTransfusions',\n                                id: 'previousTransfusions',\n                              }}\n                            >\n                              <option aria-label=\"None\" value=\"\" />\n                              <option value=\"yes\">Yes</option>\n                              <option value=\"no\">No</option>\n                            </Select>\n                          </FormControl>\n                        </Grid>\n                        <Grid item xs={6}>\n                          <FormControl className={classes.formControl}>\n                            <InputLabel shrink htmlFor=\"previousReactions\">\n                             NEW Prev. Reactions\n                            </InputLabel>\n                            <Select\n                              native\n                              id=\"previousReactions\"\n                              onChange={handleChange}\n                              className={classes.selectField}\n                              inputProps={{\n                                name: 'previousReactions',\n                                id: 'previousReactions',\n                              }}\n                            >\n                              <option aria-label=\"None\" value=\"\" />\n                              <option value=\"yes\">Yes</option>\n                              <option value=\"no\">No</option>\n                            </Select>\n                          </FormControl>\n                        </Grid>\n                      </Grid>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" form=\"updateDonorForm\">\n                      Cancel\n                    </Button>\n                    <Button onClick={handleSubmit} color=\"primary\" type=\"submit\" form=\"updateDonorForm\">\n                      Submit\n                    </Button>\n                  </DialogActions>\n                </FormGroup>\n              </form>\n            </Dialog>\n        </Box>\n      <Table>\n      <TableHead>\n          <TableRow>\n            <TableCell style={{textAlign: \"center\"}}>\n            Action\n            </TableCell>\n            <TableCell>\n            Name\n            </TableCell>\n            <TableCell>\n            Phone Number\n            </TableCell>\n            <TableCell>\n            Email Address\n            </TableCell>\n            <TableCell>\n            Blood Group\n            </TableCell>\n            <TableCell>\n            Sex\n            </TableCell>\n            <TableCell>\n            Previous Transfusions\n            </TableCell>\n            <TableCell>\n            Previous Reactions\n            </TableCell>\n            <TableCell>\n            Donor ID\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        {bloodDonors\n        .slice(page * limit, page * limit + limit)\n        .map((bloodDonor, index) => (\n          <>\n            <TableRow\n              hover\n              key={bloodDonor.id}\n              selected={selectedCustomerIds.indexOf(bloodDonor.id) !== -1}\n            >\n              <TableCell style={{textAlign: \"center\"}}>\n                <Chip icon={<OpenInBrowserIcon />} label=\"Update\" color=\"secondary\" onClick={(event) => {handleClickOpen(event, bloodDonor.id)}}/>\n              </TableCell>\n              <TableCell>\n                {bloodDonor.firstName + \" \" + bloodDonor.lastName}\n              </TableCell>\n              <TableCell>\n                {bloodDonor.phone}\n              </TableCell>\n              <TableCell>\n                {bloodDonor.email}\n              </TableCell>\n              <TableCell>\n                {bloodDonor.bloodGroup}\n              </TableCell>\n\n              <TableCell>\n                {bloodDonor.previousTransfusions}\n              </TableCell>\n              <TableCell>\n                {bloodDonor.previousReactions}\n              </TableCell>\n              <TableCell>\n                {bloodDonor.id.slice(17)}\n              </TableCell>\n            </TableRow>\n            </>\n          ))}\n        </TableBody>\n      </Table>\n      </>\n    )\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <PerfectScrollbar>\n        <Box minWidth={1050}>\n          {displayTable(bloodDonors)}\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={bloodDonors.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25, 50, 100]}\n      />\n    </Card>\n  );\n};\n\nDonors.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Donors;\n"]},"metadata":{},"sourceType":"module"}