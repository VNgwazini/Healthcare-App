{"ast":null,"code":"var _jsxFileName = \"/home/vusa/Portfolio/Healthcare-App/dashboard/src/views/request/RequestsListView/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Box, Container, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Toolbar from './Toolbar';\nimport axios from 'axios';\nimport RequestsReceived from './RequestsReceived';\nimport RequestsSent from './RequestsSent';\nconst token = localStorage.getItem(\"jwt\");\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  productCard: {\n    height: '100%'\n  },\n  box: {\n    margin: theme.spacing(4)\n  }\n}));\n\nconst RequestsListView = () => {\n  const classes = useStyles();\n  const [receivedReqs, setReceivedReqs] = useState([]);\n  const [sentReqs, setSentReqs] = useState([]);\n  const [suppliers, setSuppliers] = useState([]);\n  useEffect(() => {\n    getReceivedRequests();\n    getSentRequests();\n    getAllBloodBanks();\n  }, []);\n\n  const getReceivedRequests = () => {\n    axios({\n      method: 'GET',\n      url: `http://localhost:1337/blood-requests?supplier.id=${user.bloodBank.id}&requestor.id_ne=${user.bloodBank.id}&_sort=createdAt:DESC`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }) //handle success\n    .then(response => {\n      setReceivedReqs(response.data);\n    }) //handle error\n    .catch(error => console.error(`Error: ${error}`));\n  };\n\n  const getSentRequests = () => {\n    axios({\n      method: 'GET',\n      url: `http://localhost:1337/blood-requests?requestor.id=${user.bloodBank.id}&supplier.id_ne=${user.bloodBank.id}&_sort=createdAt:DESC`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }) //handle success\n    .then(response => {\n      setSentReqs(response.data);\n    }) //handle error\n    .catch(error => console.error(`Error: ${error}`));\n  };\n\n  const getAllBloodBanks = () => {\n    axios({\n      method: 'GET',\n      url: `http://localhost:1337/bloodbanks?id_ne=${user.bloodBank.id}&_sort=name:ASC`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }) //handle success\n    .then(response => {\n      setSuppliers(response.data);\n    }) //handle error\n    .catch(error => console.error(`Error: ${error}`));\n  }; // TODO: add filtering functionality \n  // like filter by type, request urgency, status, etc.\n\n\n  return /*#__PURE__*/React.createElement(Page, {\n    className: classes.root,\n    title: \"Manage Requests\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    suppliers: suppliers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    mt: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RequestsReceived, {\n    requests: receivedReqs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    mt: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RequestsSent, {\n    requests: sentReqs,\n    suppliers: suppliers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default RequestsListView;","map":{"version":3,"sources":["/home/vusa/Portfolio/Healthcare-App/dashboard/src/views/request/RequestsListView/index.js"],"names":["React","useState","useEffect","Box","Container","makeStyles","Page","Toolbar","axios","RequestsReceived","RequestsSent","token","localStorage","getItem","user","JSON","parse","useStyles","theme","root","backgroundColor","palette","background","dark","minHeight","paddingBottom","spacing","paddingTop","productCard","height","box","margin","RequestsListView","classes","receivedReqs","setReceivedReqs","sentReqs","setSentReqs","suppliers","setSuppliers","getReceivedRequests","getSentRequests","getAllBloodBanks","method","url","bloodBank","id","headers","Authorization","then","response","data","catch","error","console"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Toolbar from './Toolbar';\nimport axios from 'axios';\nimport RequestsReceived from './RequestsReceived';\nimport RequestsSent from './RequestsSent';\n\nconst token = localStorage.getItem(\"jwt\");\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  productCard: {\n    height: '100%',\n  },\n  box: {\n    margin: theme.spacing(4)\n  }\n}));\n\nconst RequestsListView = () => {\n  const classes = useStyles();\n  const [receivedReqs, setReceivedReqs] = useState([]);\n  const [sentReqs, setSentReqs] = useState([]);\n  const [suppliers, setSuppliers] = useState([]);\n\n  useEffect(() => {\n    getReceivedRequests();\n    getSentRequests();\n    getAllBloodBanks();\n  }, []);\n\n  const getReceivedRequests = () => {\n    axios({\n      method: 'GET',\n      url: `http://localhost:1337/blood-requests?supplier.id=${user.bloodBank.id}&requestor.id_ne=${user.bloodBank.id}&_sort=createdAt:DESC`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n    })\n    //handle success\n    .then((response) => {\n      setReceivedReqs(response.data);\n    })\n    //handle error\n    .catch(error => console.error(`Error: ${error}`));\n  }\n\n  const getSentRequests = () => {\n    axios({\n      method: 'GET',\n      url: `http://localhost:1337/blood-requests?requestor.id=${user.bloodBank.id}&supplier.id_ne=${user.bloodBank.id}&_sort=createdAt:DESC`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n    })\n    //handle success\n    .then((response) => {\n      setSentReqs(response.data);\n    })\n    //handle error\n    .catch(error => console.error(`Error: ${error}`));\n  }\n\n  const getAllBloodBanks = () => {\n    axios({\n      method: 'GET',\n      url: `http://localhost:1337/bloodbanks?id_ne=${user.bloodBank.id}&_sort=name:ASC`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n    })\n    //handle success\n    .then((response) => {\n      setSuppliers(response.data);\n    })\n    //handle error\n    .catch(error => console.error(`Error: ${error}`));\n  }\n  \n  // TODO: add filtering functionality \n  // like filter by type, request urgency, status, etc.\n  return (\n    <Page\n      className={classes.root}\n      title=\"Manage Requests\"\n    >\n      <Container maxWidth={false}>      \n        <Toolbar suppliers={suppliers}/>\n        <Box mt={3}>\n          <RequestsReceived requests={receivedReqs} />\n        </Box>\n        <Box mt={3}>\n          <RequestsSent requests={sentReqs} suppliers={suppliers} />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default RequestsListView;\n"]},"metadata":{},"sourceType":"module"}