{"ast":null,"code":"var _jsxFileName = \"/home/vusa/Portfolio/Healthcare-App/src/views/request/RequestsListView/Toolbar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Box, FormGroup, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, Grid, InputLabel, makeStyles, Select, TextField } from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport axios from 'axios';\nconst token = localStorage.getItem(\"jwt\");\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    overflowX: \"auto\"\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  formControl: {\n    // margin: theme.spacing(1),\n    minWidth: 120,\n    width: \"100%\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(1)\n  },\n  selectField: {\n    width: \"200px\",\n    marginBottom: theme.spacing(2)\n  },\n  textField: {\n    width: \"200px\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    width: \"100%\",\n    overflowX: \"auto\"\n  }\n}));\nconst state = {\n  units: 0\n};\n\nconst Toolbar = ({\n  className,\n  suppliers,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [state, setState] = React.useState('');\n\n  const handleChange = event => {\n    setState(event.target.value);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = () => {\n    let formData = new FormData(document.getElementById(\"makeRequest\"));\n    var object = {};\n    formData.forEach(function (value, key) {\n      if (key === \"supplierIndex\") {\n        object[\"supplier\"] = suppliers[value];\n      } else {\n        object[key] = value;\n      }\n    });\n    object[\"user\"] = user;\n    object[\"status\"] = \"pending\";\n    object[\"requestor\"] = user.bloodBank;\n    console.log(object);\n    axios({\n      method: 'POST',\n      url: 'http://localhost:1337/blood-requests',\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      data: object\n    }).then(response => {\n      console.log(response.data);\n      handleClose();\n      window.location.reload();\n    }).catch(error => console.error(`Error: ${error}`));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"Make Request\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    encType: \"multipart/form-data\",\n    onSubmit: handleSubmit,\n    method: \"post\",\n    id: \"makeRequest\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    id: \"makeRequestForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, \"Make a Request\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"To make a request, please select and submit the relevant information here.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 93\n    }\n  }), \"All fields are required.\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"bloodGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 23\n    }\n  }, \"Blood Group\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    label: \"Blood Group\",\n    onChange: handleChange,\n    className: classes.selectField,\n    inputProps: {\n      name: 'bloodGroup',\n      id: 'bloodGroup'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"A+\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }, \"A+\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"A-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }, \"A-\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"B+\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, \"B+\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"B-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, \"B-\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"AB+\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, \"AB+\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"AB-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, \"AB-\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"O+\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }, \"O+\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"O-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, \"O-\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"units\",\n    label: \"Units\",\n    name: \"units\",\n    type: \"number\",\n    value: state.units,\n    onChange: handleChange,\n    className: classes.textField,\n    InputProps: {\n      inputProps: {\n        min: 0\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"supplierIndex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 23\n    }\n  }, \"Supplier\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    onChange: handleChange,\n    className: classes.selectField,\n    inputProps: {\n      name: 'supplierIndex',\n      id: 'supplierIndex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }), suppliers.map((supplier, index) => /*#__PURE__*/React.createElement(\"option\", {\n    value: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 27\n    }\n  }, supplier.name))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"requestType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 23\n    }\n  }, \"Request Type\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    onChange: handleChange,\n    className: classes.selectField,\n    inputProps: {\n      name: 'requestType',\n      id: 'requestType'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"emergency\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 25\n    }\n  }, \"emergency\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"urgent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  }, \"urgent\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"standard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, \"standard\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"group_supply\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 25\n    }\n  }, \"low\")))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    form: \"makeRequestForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    color: \"primary\",\n    type: \"submit\",\n    form: \"makeRequestForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, \"Submit\")))))));\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\nexport default Toolbar;","map":{"version":3,"sources":["/home/vusa/Portfolio/Healthcare-App/src/views/request/RequestsListView/Toolbar.js"],"names":["React","PropTypes","clsx","Box","FormGroup","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","Grid","InputLabel","makeStyles","Select","TextField","Search","SearchIcon","axios","token","localStorage","getItem","user","JSON","parse","useStyles","theme","root","width","overflowX","importButton","marginRight","spacing","exportButton","formControl","minWidth","selectEmpty","marginTop","selectField","marginBottom","textField","table","state","units","Toolbar","className","suppliers","rest","classes","open","setOpen","useState","setState","handleChange","event","target","value","handleClickOpen","handleClose","handleSubmit","formData","FormData","document","getElementById","object","forEach","key","bloodBank","console","log","method","url","headers","Authorization","data","then","response","window","location","reload","catch","error","name","id","inputProps","min","map","supplier","index","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  FormGroup,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl, \n  Grid,\n  InputLabel,\n  makeStyles,\n  Select,\n  TextField\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport axios from 'axios';\n\nconst token = localStorage.getItem(\"jwt\");\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    overflowX: \"auto\"\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  formControl: {\n    // margin: theme.spacing(1),\n    minWidth: 120,\n    width: \"100%\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(1),\n  },\n  selectField: {\n    width: \"200px\",\n    marginBottom: theme.spacing(2)\n  },\n  textField: {\n    width: \"200px\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    width: \"100%\",\n    overflowX: \"auto\"\n  }\n\n}));\n\nconst state = {\n  units: 0\n}\n\nconst Toolbar = ({ className, suppliers, ...rest }) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [state, setState] = React.useState('');\n\n  const handleChange = (event) => {\n    setState(event.target.value);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  const handleSubmit = () => {\n    let formData =  new FormData(document.getElementById(\"makeRequest\"));\n    var object = {};\n    formData.forEach(function(value, key){\n      if (key === \"supplierIndex\") { object[\"supplier\"] = suppliers[value]; }\n      else { object[key] = value; }\n    });\n    object[\"user\"] = user;\n    object[\"status\"] = \"pending\";\n    object[\"requestor\"] = user.bloodBank;\n    console.log(object);\n\n    axios({\n      method: 'POST',\n      url: 'http://localhost:1337/blood-requests',\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      data: object \n    })\n    .then((response) => {\n      console.log(response.data);\n      handleClose();\n      window.location.reload();\n    })\n    .catch(error => console.error(`Error: ${error}`));\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={handleClickOpen}\n        >\n          Make Request\n        </Button>\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n          <form encType=\"multipart/form-data\" onSubmit={handleSubmit}  method=\"post\" id=\"makeRequest\">\n            <FormGroup id=\"makeRequestForm\">\n              <DialogTitle id=\"form-dialog-title\">Make a Request</DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  To make a request, please select and submit the relevant information here.<br/>\n                  All fields are required.\n                </DialogContentText>\n                <Grid container spacing={2}>\n                  <Grid item xs={6}>\n                    <FormControl required>\n                      <InputLabel htmlFor=\"bloodGroup\">Blood Group</InputLabel>\n                      <Select\n                        native\n                        label=\"Blood Group\"\n                        onChange={handleChange}\n                        className={classes.selectField}\n                        inputProps={{\n                          name: 'bloodGroup',\n                          id: 'bloodGroup',\n                        }}\n                      >\n                        <option aria-label=\"None\" value=\"\" />\n                        <option value=\"A+\">A+</option>\n                        <option value=\"A-\">A-</option>\n                        <option value=\"B+\">B+</option>\n                        <option value=\"B-\">B-</option>\n                        <option value=\"AB+\">AB+</option>\n                        <option value=\"AB-\">AB-</option>\n                        <option value=\"O+\">O+</option>\n                        <option value=\"O-\">O-</option>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <FormControl required>\n                      <TextField\n                        id=\"units\"\n                        label=\"Units\"\n                        name=\"units\"\n                        type=\"number\"\n                        value={state.units}\n                        onChange={handleChange}\n                        className={classes.textField}\n                        InputProps={{inputProps: {min: 0}}}\n                      />\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <FormControl required>\n                      <InputLabel htmlFor=\"supplierIndex\">Supplier</InputLabel>\n                      <Select\n                        native\n                        onChange={handleChange}\n                        className={classes.selectField}\n                        inputProps={{\n                          name: 'supplierIndex',\n                          id: 'supplierIndex',\n                        }}\n                      >\n                        <option aria-label=\"None\" value=\"\" />\n                        {suppliers.map((supplier, index) => \n                          <option value={index}>{supplier.name}</option>\n                        )}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <FormControl required>\n                      <InputLabel htmlFor=\"requestType\">Request Type</InputLabel>\n                      <Select\n                        native\n                        onChange={handleChange}\n                        className={classes.selectField}\n                        inputProps={{\n                          name: 'requestType',\n                          id: 'requestType',\n                        }}\n                      >\n                        <option aria-label=\"None\" value=\"\" />\n                        <option value=\"emergency\">emergency</option>\n                        <option value=\"urgent\">urgent</option>\n                        <option value=\"standard\">standard</option>\n                        <option value=\"group_supply\">low</option>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} color=\"primary\" form=\"makeRequestForm\">\n                  Cancel\n                </Button>\n                <Button onClick={handleSubmit} color=\"primary\" type=\"submit\" form=\"makeRequestForm\">\n                  Submit\n                </Button>\n              </DialogActions>\n            </FormGroup>\n          </form>\n        </Dialog>\n      </Box>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;"]},"metadata":{},"sourceType":"module"}