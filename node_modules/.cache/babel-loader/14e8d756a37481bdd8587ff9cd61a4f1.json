{"ast":null,"code":"var _jsxFileName = \"/home/vusa/Portfolio/Healthcare-App/src/views/account/AccountView/Profile.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { Avatar, Box, Button, Card, CardActions, CardContent, Divider, Typography, makeStyles } from '@material-ui/core';\nvar userInfo = JSON.parse(localStorage.getItem(\"user\"));\nvar user;\n\nif (userInfo) {\n  user = {\n    avatar: '/static/images/avatars/avatar_10.png',\n    // TODO: get relevant user icon\n    city: userInfo.bloodBank.city,\n    country: 'Ghana',\n    // currently assuming every bank is in Ghana\n    jobTitle: 'Manager',\n    // TODO: save job title in user info\n    name: userInfo.username,\n    timezone: 'GTM-7' // TODO: get time zone from location (if this is even necessary)\n\n  };\n} else {\n  user = {\n    avatar: '/static/images/avatars/avatar_10.png',\n    // TODO: get relevant user icon\n    city: 'city',\n    country: 'country',\n    // currently assuming every bank is in Ghana\n    jobTitle: 'Guest',\n    // TODO: save job title in user info\n    name: 'Not Logged In',\n    timezone: 'GTM-7' // TODO: get time zone from location (if this is even necessary)\n\n  };\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    height: 100,\n    width: 100\n  }\n}));\n\nconst Profile = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    src: user.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    gutterBottom: true,\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, user.name), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, `${user.city}, ${user.country}`), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.dateText,\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, `${moment().format('hh:mm A')} ${user.timezone}`))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    variant: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Upload picture\")));\n};\n\nProfile.propTypes = {\n  className: PropTypes.string\n};\nexport default Profile;","map":{"version":3,"sources":["/home/vusa/Portfolio/Healthcare-App/src/views/account/AccountView/Profile.js"],"names":["React","PropTypes","clsx","moment","Avatar","Box","Button","Card","CardActions","CardContent","Divider","Typography","makeStyles","userInfo","JSON","parse","localStorage","getItem","user","avatar","city","bloodBank","country","jobTitle","name","username","timezone","useStyles","root","height","width","Profile","className","rest","classes","dateText","format","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nvar userInfo = JSON.parse(localStorage.getItem(\"user\"));\nvar user;\nif (userInfo) {\n  user = {\n    avatar: '/static/images/avatars/avatar_10.png', // TODO: get relevant user icon\n    city: userInfo.bloodBank.city,\n    country: 'Ghana', // currently assuming every bank is in Ghana\n    jobTitle: 'Manager', // TODO: save job title in user info\n    name: userInfo.username,\n    timezone: 'GTM-7' // TODO: get time zone from location (if this is even necessary)\n  };\n}\nelse {\n  user = {\n    avatar: '/static/images/avatars/avatar_10.png', // TODO: get relevant user icon\n    city: 'city',\n    country: 'country', // currently assuming every bank is in Ghana\n    jobTitle: 'Guest', // TODO: save job title in user info\n    name: 'Not Logged In',\n    timezone: 'GTM-7' // TODO: get time zone from location (if this is even necessary)\n  }\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    height: 100,\n    width: 100\n  }\n}));\n\nconst Profile = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          alignItems=\"center\"\n          display=\"flex\"\n          flexDirection=\"column\"\n        >\n          <Avatar\n            className={classes.avatar}\n            src={user.avatar}\n          />\n          <Typography\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            {user.name}\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            {`${user.city}, ${user.country}`}\n          </Typography>\n          <Typography\n            className={classes.dateText}\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            {`${moment().format('hh:mm A')} ${user.timezone}`}\n          </Typography>\n        </Box>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          color=\"primary\"\n          fullWidth\n          variant=\"text\"\n        >\n          Upload picture\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}