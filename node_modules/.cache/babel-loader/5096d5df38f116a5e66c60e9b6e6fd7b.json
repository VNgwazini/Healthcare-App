{"ast":null,"code":"var _jsxFileName = \"/home/vusa/Wala_Digital/dashboard/src/views/product/ManageInventoryListView/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Box, Container, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Toolbar from './Toolbar';\nimport axios from 'axios';\nimport Donations from './Donations';\nimport moment from 'moment';\nconst token = localStorage.getItem(\"jwt\");\nvar user = JSON.parse(localStorage.getItem(\"user\"));\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  productCard: {\n    height: '100%'\n  },\n  box: {\n    margin: theme.spacing(4)\n  }\n}));\n\nconst ManageInventoryList = () => {\n  const classes = useStyles();\n  const [units, setUnits] = useState([]);\n  const [donors, setDonors] = useState([]);\n  useEffect(() => {\n    getAllBloodUnits();\n    getAllDonors();\n    updateTestDataExpirationDates();\n  }, []); // TODO: make sure it actually gets all of the donors, not just 100\n\n  const getAllDonors = () => {\n    axios({\n      method: 'GET',\n      url: `http://localhost:1337/blood-donors?bloodBank.id=${user.bloodBank.id}&_sort=lastName:ASC`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      setDonors(response.data); //console.log(donors);\n    }).catch(error => console.error(`Error: ${error}`));\n  };\n\n  const getAllBloodUnits = () => {\n    axios({\n      method: 'GET',\n      url: `http://localhost:1337/bloodsupplies?bloodBank.id=${user.bloodBank.id}&_sort=createdAt:DESC`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }) //handle success\n    .then(response => {\n      if (response.data.length === 100) {\n        axios({\n          method: 'GET',\n          url: `http://localhost:1337/bloodsupplies?bloodBank.id=${user.bloodBank.id}&_sort=createdAt:DESC&_start=100`,\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }) //handle success\n        .then(response2 => {\n          var temp = response.data.concat(response2.data);\n          setUnits(temp); //console.log(temp);\n          // stops here, assuming that there wouldn't be more than 200 units in inventory\n        }).catch(error => console.error(`Error: ${error}`));\n      }\n    }) //handle error\n    .catch(error => console.error(`Error: ${error}`));\n  };\n\n  const updateTestDataExpirationDates = () => {\n    console.log('updateTestDataExpirationDates called!');\n\n    for (var unit = 0; unit < units.length; user++) {\n      axios({\n        method: 'PUT',\n        url: `http://localhost:1337/bloodsupplies/${units[unit].id}`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        expiration: `${moment(new Date().setHours(new Date().getHours() + 24 * 35))}`\n      }).then(response => {\n        console.log('updated test data: ', response.data);\n      }).catch(error => console.error(`Error: ${error}`));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Page, {\n    className: classes.root,\n    title: \"Manage Donations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    donors: donors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    mt: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Donations, {\n    bloodUnits: units,\n    donors: donors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  })))));\n};\n\nexport default ManageInventoryList;","map":{"version":3,"sources":["/home/vusa/Wala_Digital/dashboard/src/views/product/ManageInventoryListView/index.js"],"names":["React","useState","useEffect","Box","Container","makeStyles","Page","Toolbar","axios","Donations","moment","token","localStorage","getItem","user","JSON","parse","useStyles","theme","root","backgroundColor","palette","background","dark","minHeight","paddingBottom","spacing","paddingTop","productCard","height","box","margin","ManageInventoryList","classes","units","setUnits","donors","setDonors","getAllBloodUnits","getAllDonors","updateTestDataExpirationDates","method","url","bloodBank","id","headers","Authorization","then","response","data","catch","error","console","length","response2","temp","concat","log","unit","expiration","Date","setHours","getHours"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Toolbar from './Toolbar';\nimport axios from 'axios';\nimport Donations from './Donations';\nimport moment from 'moment';\n\n\nconst token = localStorage.getItem(\"jwt\");\nvar user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  productCard: {\n    height: '100%',\n  },\n  box: {\n    margin: theme.spacing(4)\n  }\n}));\n\nconst ManageInventoryList = () => {\n  const classes = useStyles();\n  const [units, setUnits] = useState([]);\n  const [donors, setDonors] = useState([]);\n\n  useEffect(() => {\n    getAllBloodUnits();\n    getAllDonors();\n    updateTestDataExpirationDates();\n  }, []);\n\n  // TODO: make sure it actually gets all of the donors, not just 100\n  const getAllDonors = () => {\n    axios({\n      method: 'GET',\n      url: `http://localhost:1337/blood-donors?bloodBank.id=${user.bloodBank.id}&_sort=lastName:ASC`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n    })\n    .then((response) => {\n      setDonors(response.data);\n      //console.log(donors);\n    })\n    .catch(error => console.error(`Error: ${error}`));\n  }\n\n  const getAllBloodUnits = () => {\n    axios({\n      method: 'GET',\n      url: `http://localhost:1337/bloodsupplies?bloodBank.id=${user.bloodBank.id}&_sort=createdAt:DESC`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n    })\n    //handle success\n    .then((response) => {\n      if (response.data.length === 100) {\n        axios({\n          method: 'GET',\n          url: `http://localhost:1337/bloodsupplies?bloodBank.id=${user.bloodBank.id}&_sort=createdAt:DESC&_start=100`,\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n        })\n        //handle success\n        .then((response2) => {\n          var temp = response.data.concat(response2.data);\n          setUnits(temp);\n          //console.log(temp);\n          // stops here, assuming that there wouldn't be more than 200 units in inventory\n        })\n        .catch(error => console.error(`Error: ${error}`));\n      }\n    })\n    //handle error\n    .catch(error => console.error(`Error: ${error}`));\n  }\n\n  const updateTestDataExpirationDates = () => {\n    console.log('updateTestDataExpirationDates called!')\n    for(var unit = 0; unit < units.length; user++)\n    {     \n      axios({\n        method: 'PUT',\n        url: `http://localhost:1337/bloodsupplies/${units[unit].id}`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n          expiration : `${moment(new Date().setHours(new Date().getHours() + (24*35)))}`,\n      })\n      .then((response) => {\n        console.log('updated test data: ',response.data);\n      })\n      .catch(error => console.error(`Error: ${error}`));\n    }\n  }\n\n  return (\n    <>\n    <Page\n      className={classes.root}\n      title=\"Manage Donations\"\n    >\n      <Container maxWidth={false}>\n        <Toolbar donors={donors}/>\n        <Box mt={3}>\n          <Donations bloodUnits={units} donors={donors}/>\n        </Box>\n      </Container>\n    </Page>\n    </>\n  );\n};\n\nexport default ManageInventoryList;\n"]},"metadata":{},"sourceType":"module"}