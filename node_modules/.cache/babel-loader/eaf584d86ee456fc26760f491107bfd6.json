{"ast":null,"code":"var _jsxFileName = \"/home/vusa/Wala_Digital/dashboard/src/views/request/RequestsListView/RequestsReceived.js\";\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Button, Box, Card, CardHeader, Chip, Checkbox, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, FormGroup, IconButton, InputLabel, Popover, Select, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, TextField, Tooltip, Typography, makeStyles } from '@material-ui/core';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\nimport FlightTakeoffIcon from '@material-ui/icons/FlightTakeoff';\nimport axios from 'axios';\nimport { SignalCellularNullRounded } from '@material-ui/icons';\nconst token = localStorage.getItem(\"jwt\");\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  typography: {\n    padding: theme.spacing(1)\n  },\n  formControl: {\n    minWidth: 120,\n    width: \"100%\"\n  },\n  selectField: {\n    width: \"200px\"\n  },\n  textField: {\n    width: \"200px\"\n  }\n}));\n\nconst RequestsReceived = ({\n  className,\n  requests,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const [openFulfill, setOpenFulfill] = useState(false);\n  const [openCancel, setOpenCancel] = useState(false);\n  const [openPopover, setOpenPopover] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [state, setState] = useState({\n    cancellationReason: \"None provided\"\n  });\n\n  const resetSelectedIDs = () => {\n    setSelectedCustomerIds([]);\n  };\n\n  const handleSelectAll = event => {\n    let newSelectedCustomerIds;\n\n    if (event.target.checked) {\n      newSelectedCustomerIds = requests.map(customer => customer.id);\n    } else {\n      newSelectedCustomerIds = [];\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomerIds.indexOf(id);\n    let newSelectedCustomerIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, selectedIndex), selectedCustomerIds.slice(selectedIndex + 1));\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n    console.log('Selected IDs: ', newSelectedCustomerIds);\n  };\n\n  const handleLimitChange = event => {\n    setLimit(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChange = event => {\n    setState(event.target.value);\n    console.log(state);\n  };\n\n  const handleClickOpenFulfill = (event, id) => {\n    handleSelectOne(event, id);\n    setOpenFulfill(true);\n  };\n\n  const handleCloseFulfill = () => {\n    setOpenFulfill(false);\n    resetSelectedIDs();\n  };\n\n  const handleSubmitFulfill = props => {\n    let formData = new FormData(document.getElementById(\"fulfillRequest\"));\n    var dataObject = {\n      status: \"shipped\",\n      supplier: user.bloodBank,\n      deliveryMethod: formData.get(\"deliveryMethod\")\n    };\n    axios({\n      method: 'PUT',\n      url: `http://ec2-35-180-116-27.eu-west-3.compute.amazonaws.com:1337/blood-requests/${selectedCustomerIds[0]}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      data: dataObject\n    }).then(response => {\n      handleCloseFulfill();\n    }).catch(error => console.error(`Error: ${error}`));\n    var requestToUpdate = requests.filter(request => request.id == selectedCustomerIds[0])[0];\n    const currentDate = new Date(); // gets the oldest, non-expired, unassigned units of the right blood type\n\n    var url = `http://ec2-35-180-116-27.eu-west-3.compute.amazonaws.com:1337/bloodsupplies?bloodBank.id=${user.bloodBank.id}&bloodDonor.bloodGroup=${requestToUpdate.bloodGroup}&expiration_gt=${currentDate.toISOString()}&usage=unassigned&_sort=expiration:ASC`;\n\n    if (url.includes('+')) {\n      url = url.replace('+', '%2B');\n    }\n\n    axios({\n      method: 'GET',\n      url: url,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response2 => {\n      for (var i = 0; i < requestToUpdate.units; i++) {\n        axios({\n          method: 'PUT',\n          url: `http://ec2-35-180-116-27.eu-west-3.compute.amazonaws.com:1337/bloodsupplies/${response2.data[i].id}`,\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          data: {\n            bloodRequest: requestToUpdate,\n            usage: \"external\"\n          }\n        }).then(response3 => {\n          console.log(response3.data);\n          window.location.reload();\n        });\n      }\n    }).catch(error => console.error(`Error: ${error}`));\n  };\n\n  const handleClickOpenCancel = (event, id) => {\n    handleSelectOne(event, id);\n    setOpenCancel(true);\n  };\n\n  const handleCloseCancel = () => {\n    setOpenCancel(false);\n    resetSelectedIDs();\n  };\n\n  const handleSubmitCancel = () => {\n    let formData = new FormData(document.getElementById(\"cancelRequest\"));\n    let reason = formData.get(\"cancellationReason\");\n    console.log(reason);\n    axios({\n      method: 'PUT',\n      url: `http://ec2-35-180-116-27.eu-west-3.compute.amazonaws.com:1337/blood-requests/${selectedCustomerIds[0]}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      data: {\n        \"status\": \"canceled\",\n        \"cancellationReason\": reason\n      }\n    }).then(response => {\n      console.log(response);\n    }).catch(error => console.error(`Error: ${error}`));\n    window.location.reload();\n  };\n\n  const handleClickOpenPopover = (event, req) => {\n    handleSelectOne(event, req.id);\n    setAnchorEl(event.currentTarget);\n    var reason = req.cancellationReason ? req.cancellationReason : \"None provided\";\n    setState({\n      cancellationReason: reason\n    });\n    setOpenPopover(true);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(false);\n    setAnchorEl(null);\n    resetSelectedIDs();\n  };\n\n  const displayTable = requests => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      title: \"Requests Received\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      my: 3,\n      mx: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      open: openFulfill,\n      onClose: handleCloseFulfill,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      encType: \"multipart/form-data\",\n      onSubmit: handleSubmitFulfill,\n      method: \"post\",\n      id: \"fulfillRequest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 19\n      }\n    }, \"Fulfill Request\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }\n    }, \"To fufill a request, please enter the relevant information here. Blood units of that blood type (oldest, non-expired) will be automatically assigned to this request.\"), /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      className: classes.formControl,\n      id: \"fulfillRequestForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"deliveryMethod\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 23\n      }\n    }, \"Delivery Method\"), /*#__PURE__*/React.createElement(Select, {\n      native: true,\n      onChange: handleChange,\n      className: classes.selectField,\n      inputProps: {\n        name: 'deliveryMethod',\n        id: 'deliveryMethod'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      \"aria-label\": \"None\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"dispatch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 25\n      }\n    }, \"Dispatch\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"drones\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 25\n      }\n    }, \"Drones\")))), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: handleCloseFulfill,\n      color: \"primary\",\n      form: \"fulfillRequestForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: handleSubmitFulfill,\n      color: \"primary\",\n      type: \"submit\",\n      form: \"fulfillRequestForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }\n    }, \"Submit\")))))), /*#__PURE__*/React.createElement(Box, {\n      my: 3,\n      mx: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      open: openCancel,\n      onClose: handleCloseCancel,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      encType: \"multipart/form-data\",\n      onSubmit: handleSubmitCancel,\n      method: \"post\",\n      id: \"cancelRequest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 19\n      }\n    }, \"Cancel Request\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }\n    }, \"Before canceling a request, please enter the cancellation reason here.\"), /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      className: classes.formControl,\n      id: \"cancelRequestForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"cancellationReason\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 23\n      }\n    }, \"Cancellation Reason\"), /*#__PURE__*/React.createElement(Select, {\n      native: true,\n      onChange: handleChange,\n      className: classes.selectField,\n      inputProps: {\n        name: 'cancellationReason',\n        id: 'cancellationReason'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      \"aria-label\": \"None\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"no_longer_requesting\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 25\n      }\n    }, \"no longer requesting\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"already_fulfilled_elsewhere\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 25\n      }\n    }, \"already fulfilled elsewhere\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"other\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 25\n      }\n    }, \"other\")))), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: handleCloseCancel,\n      color: \"primary\",\n      form: \"cancelRequestForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: handleSubmitCancel,\n      color: \"primary\",\n      type: \"submit\",\n      form: \"cancelRequestForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 21\n      }\n    }, \"Submit\")))))), /*#__PURE__*/React.createElement(Popover, {\n      id: \"cancel-reason-popover\",\n      open: openPopover,\n      anchorEl: anchorEl,\n      onClose: handleClosePopover,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.typography,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }\n    }, \"Reason: \", state.cancellationReason)), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 15\n      }\n    }, \"Action\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 15\n      }\n    }, \"Creation Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 15\n      }\n    }, \"Last Updated\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 15\n      }\n    }, \"Blood Group\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 15\n      }\n    }, \"Units\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 15\n      }\n    }, \"Requestor\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 15\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 15\n      }\n    }, \"Request Type\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 15\n      }\n    }, \"Request ID\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }\n    }, requests.slice(page * limit, page * limit + limit).map(request => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      key: request.id,\n      selected: selectedCustomerIds.indexOf(request.id) !== -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      icon: request.status == \"canceled\" ? /*#__PURE__*/React.createElement(CancelIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 60\n        }\n      }) : request.deliveryMethod == \"dispatch\" ? /*#__PURE__*/React.createElement(LocalShippingIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 69\n        }\n      }) : /*#__PURE__*/React.createElement(FlightTakeoffIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 93\n        }\n      }),\n      label: request.status == \"canceled\" ? \"N/A\" : \"Sent\",\n      color: \"default\",\n      disabled: true,\n      style: request.status != \"pending\" ? {\n        display: \"inline-flex\"\n      } : {\n        display: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Fulfill\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      color: \"primary\",\n      size: \"small\",\n      style: request.status == \"pending\" ? {\n        display: \"inline-flex\"\n      } : {\n        display: \"none\"\n      },\n      onClick: event => {\n        handleClickOpenFulfill(event, request.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(OpenInBrowserIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Cancel\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      color: \"primary\",\n      size: \"small\",\n      style: request.status == \"pending\" ? {\n        display: \"inline-flex\"\n      } : {\n        display: \"none\"\n      },\n      onClick: event => {\n        handleClickOpenCancel(event, request.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(CancelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 25\n      }\n    }))))), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 17\n      }\n    }, moment(request.createdAt).format('ll')), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 17\n      }\n    }, moment(request.updatedAt).format('ll')), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 17\n      }\n    }, request.bloodGroup), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 17\n      }\n    }, request.units), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 17\n      }\n    }, request.requestor.name), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Click to view reason\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      id: \"popover-chip\",\n      color: \"primary\",\n      label: request.status,\n      size: \"small\",\n      style: request.status == \"canceled\" ? {\n        display: \"inline-flex\"\n      } : {\n        display: \"none\"\n      },\n      onClick: event => {\n        handleClickOpenPopover(event, request);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Chip, {\n      color: request.status == \"pending\" ? \"primary\" : \"default\",\n      label: request.status,\n      size: \"small\",\n      style: request.status == \"canceled\" ? {\n        display: \"none\"\n      } : {\n        display: \"inline-flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 17\n      }\n    }, request.requestType), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 17\n      }\n    }, request.id.slice(17)))))))));\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    minWidth: 1050,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 9\n    }\n  }, displayTable(requests))), /*#__PURE__*/React.createElement(TablePagination, {\n    component: \"div\",\n    count: requests.length,\n    onChangePage: handlePageChange,\n    onChangeRowsPerPage: handleLimitChange,\n    page: page,\n    rowsPerPage: limit,\n    rowsPerPageOptions: [10, 25, 50, 100],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }\n  }));\n};\n\nRequestsReceived.propTypes = {\n  className: PropTypes.string\n};\nexport default RequestsReceived;","map":{"version":3,"sources":["/home/vusa/Wala_Digital/dashboard/src/views/request/RequestsListView/RequestsReceived.js"],"names":["React","useState","useEffect","clsx","moment","PropTypes","PerfectScrollbar","Button","Box","Card","CardHeader","Chip","Checkbox","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","FormGroup","IconButton","InputLabel","Popover","Select","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TextField","Tooltip","Typography","makeStyles","CancelIcon","LocalShippingIcon","OpenInBrowserIcon","FlightTakeoffIcon","axios","SignalCellularNullRounded","token","localStorage","getItem","user","JSON","parse","useStyles","theme","root","avatar","marginRight","spacing","typography","padding","formControl","minWidth","width","selectField","textField","RequestsReceived","className","requests","rest","classes","selectedCustomerIds","setSelectedCustomerIds","limit","setLimit","page","setPage","openFulfill","setOpenFulfill","openCancel","setOpenCancel","openPopover","setOpenPopover","anchorEl","setAnchorEl","state","setState","cancellationReason","resetSelectedIDs","handleSelectAll","event","newSelectedCustomerIds","target","checked","map","customer","id","handleSelectOne","selectedIndex","indexOf","concat","slice","length","console","log","handleLimitChange","parseInt","value","handlePageChange","newPage","handleChange","handleClickOpenFulfill","handleCloseFulfill","handleSubmitFulfill","props","formData","FormData","document","getElementById","dataObject","status","supplier","bloodBank","deliveryMethod","get","method","url","headers","Authorization","data","then","response","catch","error","requestToUpdate","filter","request","currentDate","Date","bloodGroup","toISOString","includes","replace","response2","i","units","bloodRequest","usage","response3","window","location","reload","handleClickOpenCancel","handleCloseCancel","handleSubmitCancel","reason","handleClickOpenPopover","req","currentTarget","handleClosePopover","displayTable","name","vertical","horizontal","textAlign","display","createdAt","format","updatedAt","requestor","requestType","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Button,\n  Box,\n  Card,\n  CardHeader,\n  Chip,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormGroup,\n  IconButton,\n  InputLabel,\n  Popover,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  Tooltip,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\nimport FlightTakeoffIcon from '@material-ui/icons/FlightTakeoff';\n\nimport axios from 'axios';\nimport { SignalCellularNullRounded } from '@material-ui/icons';\n\nconst token = localStorage.getItem(\"jwt\");\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  typography: {\n    padding: theme.spacing(1),\n  },\n  formControl: {\n    minWidth: 120,\n    width: \"100%\"\n  },\n  selectField: {\n    width: \"200px\"\n  },\n  textField: {\n    width: \"200px\"\n  }\n}));\n\nconst RequestsReceived = ({ className, requests, ...rest }) => {\n  const classes = useStyles();\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const [openFulfill, setOpenFulfill] = useState(false);\n  const [openCancel, setOpenCancel] = useState(false);\n  const [openPopover, setOpenPopover] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [state, setState] = useState({\n    cancellationReason: \"None provided\"\n  });\n\n  const resetSelectedIDs = () => {\n    setSelectedCustomerIds([]);\n  }\n\n  const handleSelectAll = (event) => {\n    let newSelectedCustomerIds;\n\n    if (event.target.checked) {\n      newSelectedCustomerIds = requests.map((customer) => customer.id);\n    } else {\n      newSelectedCustomerIds = [];\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomerIds.indexOf(id);\n    let newSelectedCustomerIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\n        selectedCustomerIds.slice(0, selectedIndex),\n        selectedCustomerIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n    console.log('Selected IDs: ', newSelectedCustomerIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChange = (event) => {\n    setState(event.target.value);\n    console.log(state);\n  };\n\n  const handleClickOpenFulfill = (event, id) => {\n    handleSelectOne(event,id);\n    setOpenFulfill(true);\n  };\n\n  const handleCloseFulfill = () => {\n    setOpenFulfill(false);\n    resetSelectedIDs();\n  };\n\n  const handleSubmitFulfill = (props) => {\n    let formData =  new FormData(document.getElementById(\"fulfillRequest\"));\n    var dataObject = {\n      status: \"shipped\",\n      supplier: user.bloodBank,\n      deliveryMethod: formData.get(\"deliveryMethod\")\n    }\n\n    axios({\n      method: 'PUT',\n      url: `http://ec2-35-180-116-27.eu-west-3.compute.amazonaws.com:1337/blood-requests/${selectedCustomerIds[0]}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      data: dataObject\n    })\n    .then((response) => {\n      handleCloseFulfill();\n    })\n    .catch(error => console.error(`Error: ${error}`));\n\n    var requestToUpdate = requests.filter(request => request.id == selectedCustomerIds[0])[0];\n    const currentDate = new Date();\n    // gets the oldest, non-expired, unassigned units of the right blood type\n    var url = `http://ec2-35-180-116-27.eu-west-3.compute.amazonaws.com:1337/bloodsupplies?bloodBank.id=${user.bloodBank.id}&bloodDonor.bloodGroup=${requestToUpdate.bloodGroup}&expiration_gt=${currentDate.toISOString()}&usage=unassigned&_sort=expiration:ASC`;\n    if (url.includes('+')) {\n      url = url.replace('+', '%2B');\n    }\n    axios({\n      method: 'GET',\n      url: url,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    })\n    .then((response2) => {\n      for (var i = 0; i < requestToUpdate.units; i++) {\n        axios({\n          method: 'PUT',\n          url: `http://ec2-35-180-116-27.eu-west-3.compute.amazonaws.com:1337/bloodsupplies/${response2.data[i].id}`,\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          data: { \n            bloodRequest: requestToUpdate, \n            usage: \"external\" \n          }\n        })\n        .then((response3) => {\n          console.log(response3.data);\n          window.location.reload();\n        })\n      }\n    })\n    .catch(error => console.error(`Error: ${error}`));\n  };\n\n  const handleClickOpenCancel = (event, id) => {\n    handleSelectOne(event,id);\n    setOpenCancel(true);\n  };\n\n  const handleCloseCancel = () => {\n    setOpenCancel(false);\n    resetSelectedIDs();\n  };\n\n  const handleSubmitCancel = () => {\n    let formData =  new FormData(document.getElementById(\"cancelRequest\"));\n    let reason = formData.get(\"cancellationReason\");\n    console.log(reason);\n    axios({\n      method: 'PUT',\n      url: `http://ec2-35-180-116-27.eu-west-3.compute.amazonaws.com:1337/blood-requests/${selectedCustomerIds[0]}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      data: {\"status\": \"canceled\", \"cancellationReason\": reason}\n    })\n    .then((response) => {\n      console.log(response);    \n    })\n    .catch(error => console.error(`Error: ${error}`));\n    window.location.reload();\n  }\n\n  const handleClickOpenPopover = (event, req) => {\n    handleSelectOne(event, req.id);\n    setAnchorEl(event.currentTarget);\n    var reason = req.cancellationReason ? req.cancellationReason : \"None provided\";\n    setState({\n      cancellationReason: reason\n    })\n    setOpenPopover(true);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(false);\n    setAnchorEl(null);\n    resetSelectedIDs();\n  };\n\n  const displayTable = (requests) => {\n    return (\n      <>\n        <Card>\n          <CardHeader title=\"Requests Received\" />\n          <Box my={3} mx={3}>\n            <Dialog open={openFulfill} onClose={handleCloseFulfill} aria-labelledby=\"form-dialog-title\">\n              <form encType=\"multipart/form-data\" onSubmit={handleSubmitFulfill}  method=\"post\" id=\"fulfillRequest\">\n                <FormGroup>\n                  <DialogTitle id=\"form-dialog-title\">Fulfill Request</DialogTitle>\n                  <DialogContent>\n                    <DialogContentText>\n                      To fufill a request, please enter the relevant information here.\n                      Blood units of that blood type (oldest, non-expired) will be automatically assigned to this request.\n                    </DialogContentText>\n                    <FormControl required className={classes.formControl} id=\"fulfillRequestForm\">\n                      <InputLabel htmlFor=\"deliveryMethod\">Delivery Method</InputLabel>\n                      <Select\n                        native\n                        onChange={handleChange}\n                        className={classes.selectField}\n                        inputProps={{\n                          name: 'deliveryMethod',\n                          id: 'deliveryMethod',\n                        }}\n                      >\n                        <option aria-label=\"None\" value=\"\" />\n                        <option value=\"dispatch\">Dispatch</option>\n                        <option value=\"drones\">Drones</option>\n                      </Select>\n                    </FormControl>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleCloseFulfill} color=\"primary\" form=\"fulfillRequestForm\">\n                      Cancel\n                    </Button>\n                    <Button onClick={handleSubmitFulfill} color=\"primary\" type=\"submit\" form=\"fulfillRequestForm\">\n                      Submit\n                    </Button>\n                  </DialogActions>\n                </FormGroup>\n              </form>\n            </Dialog>\n          </Box>\n          <Box my={3} mx={3}>\n            <Dialog open={openCancel} onClose={handleCloseCancel} aria-labelledby=\"form-dialog-title\">\n              <form encType=\"multipart/form-data\" onSubmit={handleSubmitCancel}  method=\"post\" id=\"cancelRequest\">\n                <FormGroup>\n                  <DialogTitle id=\"form-dialog-title\">Cancel Request</DialogTitle>\n                  <DialogContent>\n                    <DialogContentText>\n                      Before canceling a request, please enter the cancellation reason here.\n                    </DialogContentText>\n                    <FormControl required className={classes.formControl} id=\"cancelRequestForm\">\n                      <InputLabel htmlFor=\"cancellationReason\">Cancellation Reason</InputLabel>\n                      <Select\n                        native\n                        onChange={handleChange}\n                        className={classes.selectField}\n                        inputProps={{\n                          name: 'cancellationReason',\n                          id: 'cancellationReason',\n                        }}\n                      >\n                        <option aria-label=\"None\" value=\"\" />\n                        <option value=\"no_longer_requesting\">no longer requesting</option>\n                        <option value=\"already_fulfilled_elsewhere\">already fulfilled elsewhere</option>\n                        <option value=\"other\">other</option>\n                      </Select>\n                    </FormControl>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleCloseCancel} color=\"primary\" form=\"cancelRequestForm\">\n                      Cancel\n                    </Button>\n                    <Button onClick={handleSubmitCancel} color=\"primary\" type=\"submit\" form=\"cancelRequestForm\">\n                      Submit\n                    </Button>\n                  </DialogActions>\n                </FormGroup>\n              </form>\n            </Dialog>\n          </Box>\n        <Popover\n          id=\"cancel-reason-popover\"\n          open={openPopover}\n          anchorEl={anchorEl}\n          onClose={handleClosePopover}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n        >\n          <Typography className={classes.typography}>Reason: {state.cancellationReason}</Typography>\n        </Popover>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {/* <TableCell padding=\"checkbox\">\n                <Checkbox\n                  checked={selectedCustomerIds.length === requests.length}\n                  color=\"primary\"\n                  indeterminate={\n                    selectedCustomerIds.length > 0\n                    && selectedCustomerIds.length < requests.length\n                  }\n                  onChange={handleSelectAll}\n                />\n              </TableCell> */}\n              <TableCell style={{textAlign: \"center\"}}>\n                Action\n              </TableCell>\n              <TableCell>\n                Creation Date\n              </TableCell>\n              <TableCell>\n                Last Updated\n              </TableCell>\n              <TableCell>\n                Blood Group\n              </TableCell>\n              <TableCell>\n                Units\n              </TableCell>\n              <TableCell>\n                Requestor\n              </TableCell>\n              {/* <TableCell>\n                Delivery Method\n              </TableCell> */}\n              <TableCell>\n                Status\n              </TableCell>\n              <TableCell>\n                Request Type\n              </TableCell>\n              <TableCell>\n                Request ID\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {requests\n          .slice(page * limit, page * limit + limit)\n          .map((request) => (\n            <>\n              <TableRow\n                hover\n                key={request.id}\n                selected={selectedCustomerIds.indexOf(request.id) !== -1}\n              >\n                {/* <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedCustomerIds.indexOf(request.id) !== -1}\n                    onChange={(event) => handleSelectOne(event, request.id)}\n                    value=\"true\"\n                    // disabled={request.status==\"canceled\"}\n                  />\n                </TableCell> */}\n                <TableCell>\n                  <div style={{textAlign: \"center\"}}>\n                    <Chip \n                      icon={request.status == \"canceled\" ? <CancelIcon /> \n                          : (request.deliveryMethod == \"dispatch\" ? <LocalShippingIcon /> : <FlightTakeoffIcon />)} \n                      label={request.status == \"canceled\" ? \"N/A\" : \"Sent\"}\n                      color=\"default\"\n                      disabled\n                      style={request.status != \"pending\" ? {display: \"inline-flex\"} : {display: \"none\"}}\n                    />\n                    <Tooltip title=\"Fulfill\" placement=\"top\">\n                      <IconButton\n                        color=\"primary\"\n                        size=\"small\"\n                        style={request.status == \"pending\" ? {display: \"inline-flex\"} : {display: \"none\"}}\n                        onClick={(event) => {handleClickOpenFulfill(event,request.id)}}\n                      >\n                        <OpenInBrowserIcon/>\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Cancel\" placement=\"top\">\n                      <IconButton \n                        color=\"primary\"\n                        size=\"small\"\n                        style={request.status == \"pending\" ? {display: \"inline-flex\"} : {display: \"none\"}}\n                        onClick={(event) => {handleClickOpenCancel(event,request.id)}}\n                      >\n                        <CancelIcon/>\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  {moment(request.createdAt).format('ll')}\n                </TableCell>\n                <TableCell>\n                  {moment(request.updatedAt).format('ll')}\n                </TableCell>\n                <TableCell>\n                  {request.bloodGroup}\n                </TableCell>\n                <TableCell>\n                  {request.units}\n                </TableCell>\n                <TableCell>\n                  {request.requestor.name}\n                </TableCell>\n                {/* <TableCell>\n                  {request.deliveryMethod}\n                </TableCell> */}\n                <TableCell>\n                  <Tooltip title=\"Click to view reason\" placement=\"top\">\n                    <Chip \n                      id=\"popover-chip\" \n                      color=\"primary\" \n                      label={request.status} \n                      size=\"small\" \n                      style={request.status == \"canceled\" ? {display: \"inline-flex\"} : {display: \"none\"}}\n                      onClick={(event) => {handleClickOpenPopover(event, request)}}\n                    />\n                  </Tooltip>\n                  <Chip \n                    color={request.status==\"pending\" ? \"primary\" : \"default\"} \n                    label={request.status} \n                    size=\"small\" \n                    style={request.status == \"canceled\" ? {display: \"none\"} : {display: \"inline-flex\"}}\n                  />\n                </TableCell>\n                <TableCell>\n                  {request.requestType}\n                </TableCell>\n                <TableCell>\n                  {request.id.slice(17)}\n                </TableCell>\n              </TableRow>\n              </>\n            ))}\n          </TableBody>\n        </Table>\n      </Card>\n      </>\n    )\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <PerfectScrollbar>\n        <Box minWidth={1050}>\n          {displayTable(requests)}\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={requests.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[10, 25, 50, 100]}\n      />\n    </Card>\n  );\n};\n\nRequestsReceived.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default RequestsReceived;\n"]},"metadata":{},"sourceType":"module"}