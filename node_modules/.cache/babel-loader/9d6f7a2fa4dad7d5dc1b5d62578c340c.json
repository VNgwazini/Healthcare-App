{"ast":null,"code":"var _jsxFileName = \"/home/vusa/Portfolio/Healthcare-App/dashboard/src/views/reports/DashboardView/InventoryPie.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, Typography, colors } from '@material-ui/core';\nimport OpacityIcon from '@material-ui/icons/Opacity';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nconst BLOODTYPES = ['A%2B', 'A-', 'B%2B', 'B-', 'AB%2B', 'AB-', 'O%2B', 'O-'];\n\nclass InventoryPie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      units: []\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"jwt\");\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const currentDate = new Date();\n\n    const getData = async () => {\n      var url;\n      var tempArr = [];\n\n      for (const i in BLOODTYPES) {\n        url = `http://localhost:1337/bloodsupplies?bloodBank.id=${user.bloodBank.id}&bloodDonor.bloodGroup=${BLOODTYPES[i]}&usage=unassigned`;\n        const response = await axios.get(url, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        tempArr.push(response.data.length);\n        this.setState({\n          units: tempArr\n        });\n      }\n    };\n\n    if (user) {\n      getData();\n    }\n  }\n\n  render() {\n    const {\n      className,\n      ...rest\n    } = this.props;\n    var dataArr = [];\n    var total = this.state.units.reduce(function (a, b) {\n      return a + b;\n    }, 0);\n\n    for (const i in this.state.units) {\n      dataArr.push(Math.round(this.state.units[i] / total * 100));\n    }\n\n    const data = {\n      datasets: [{\n        data: dataArr,\n        backgroundColor: [colors.red[600], colors.orange[600], colors.yellow[600], colors.green[600], colors.teal[600], colors.blue[600], colors.indigo[600], colors.purple[600]],\n        borderWidth: 8,\n        borderColor: colors.common.white,\n        hoverBorderColor: colors.common.white\n      }],\n      labels: BLOODTYPES\n    };\n    const devices = [{\n      title: 'A+',\n      value: dataArr[0],\n      icon: OpacityIcon,\n      color: colors.red[600]\n    }, {\n      title: 'A-',\n      value: dataArr[1],\n      icon: OpacityIcon,\n      color: colors.orange[600]\n    }, {\n      title: 'B+',\n      value: dataArr[2],\n      icon: OpacityIcon,\n      color: colors.yellow[600]\n    }, {\n      title: 'B-',\n      value: dataArr[3],\n      icon: OpacityIcon,\n      color: colors.green[600]\n    }, {\n      title: 'AB+',\n      value: dataArr[4],\n      icon: OpacityIcon,\n      color: colors.teal[600]\n    }, {\n      title: 'AB-',\n      value: dataArr[5],\n      icon: OpacityIcon,\n      color: colors.blue[600]\n    }, {\n      title: 'O+',\n      value: dataArr[6],\n      icon: OpacityIcon,\n      color: colors.indigo[600]\n    }, {\n      title: 'O-',\n      value: dataArr[7],\n      icon: OpacityIcon,\n      color: colors.purple[600]\n    }];\n    const options = {\n      animation: false,\n      cutoutPercentage: 80,\n      layout: {\n        padding: 0\n      },\n      legend: {\n        display: false\n      },\n      maintainAspectRatio: false,\n      responsive: true\n    };\n    return /*#__PURE__*/React.createElement(Card, Object.assign({\n      className: className,\n      style: {\n        height: '100%'\n      }\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(CardHeader, {\n      title: \"Inventory Overview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      height: 300,\n      position: \"relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Doughnut, {\n      data: data,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      mt: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, devices.map(({\n      color,\n      icon: Icon,\n      title,\n      value\n    }) => /*#__PURE__*/React.createElement(Box, {\n      key: title,\n      p: 1,\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      color: \"action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      color: \"textPrimary\",\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, title), /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        color\n      },\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, value, \"%\"))))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      p: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      endIcon: /*#__PURE__*/React.createElement(ArrowRightIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 22\n        }\n      }),\n      size: \"small\",\n      variant: \"text\",\n      href: \"http://localhost:3000/app/manage_inventory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }\n    }, \"View details\")));\n  }\n\n}\n\nInventoryPie.propTypes = {\n  className: PropTypes.string\n};\nexport default InventoryPie;","map":{"version":3,"sources":["/home/vusa/Portfolio/Healthcare-App/dashboard/src/views/reports/DashboardView/InventoryPie.js"],"names":["React","axios","PropTypes","Doughnut","Box","Button","Card","CardContent","CardHeader","Divider","Typography","colors","OpacityIcon","ArrowRightIcon","BLOODTYPES","InventoryPie","Component","constructor","props","state","units","componentDidMount","token","localStorage","getItem","user","JSON","parse","currentDate","Date","getData","url","tempArr","i","bloodBank","id","response","get","headers","Authorization","push","data","length","setState","render","className","rest","dataArr","total","reduce","a","b","Math","round","datasets","backgroundColor","red","orange","yellow","green","teal","blue","indigo","purple","borderWidth","borderColor","common","white","hoverBorderColor","labels","devices","title","value","icon","color","options","animation","cutoutPercentage","layout","padding","legend","display","maintainAspectRatio","responsive","height","map","Icon","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Typography,\n  colors\n} from '@material-ui/core';\nimport OpacityIcon from '@material-ui/icons/Opacity';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst BLOODTYPES = ['A%2B', 'A-', 'B%2B', 'B-', 'AB%2B', 'AB-', 'O%2B', 'O-'];\n\nclass InventoryPie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      units: []\n    }\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"jwt\");\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const currentDate = new Date();\n\n    const getData = async () => {\n      var url;\n      var tempArr = [];\n      for (const i in BLOODTYPES) {\n        url = `http://localhost:1337/bloodsupplies?bloodBank.id=${user.bloodBank.id}&bloodDonor.bloodGroup=${BLOODTYPES[i]}&usage=unassigned`;\n        const response = await axios.get(url, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        tempArr.push(response.data.length);\n        this.setState({\n          units: tempArr\n        });\n      }\n    }\n    \n    if (user) {\n      getData();\n    }\n  }\n\n  render() {\n    const {className, ...rest} = this.props;\n\n    var dataArr = [];\n    var total = this.state.units.reduce(function(a, b){\n      return a + b;\n    }, 0);\n    for (const i in this.state.units) {\n      dataArr.push(Math.round(this.state.units[i] / total * 100));\n    }\n\n    const data = {\n      datasets: [\n        {\n          data: dataArr,\n          backgroundColor: [\n            colors.red[600],\n            colors.orange[600],\n            colors.yellow[600],\n            colors.green[600],\n            colors.teal[600],\n            colors.blue[600],\n            colors.indigo[600],\n            colors.purple[600],\n          ],\n          borderWidth: 8,\n          borderColor: colors.common.white,\n          hoverBorderColor: colors.common.white\n        }\n      ],\n      labels: BLOODTYPES\n    };\n  \n    const devices = [\n      {\n        title: 'A+',\n        value: dataArr[0],\n        icon: OpacityIcon,\n        color: colors.red[600]\n      },\n      {\n        title: 'A-',\n        value: dataArr[1],\n        icon: OpacityIcon,\n        color: colors.orange[600]\n      },\n      {\n        title: 'B+',\n        value: dataArr[2],\n        icon: OpacityIcon,\n        color: colors.yellow[600]\n      },\n      {\n        title: 'B-',\n        value: dataArr[3],\n        icon: OpacityIcon,\n        color: colors.green[600]\n      },\n      {\n        title: 'AB+',\n        value: dataArr[4],\n        icon: OpacityIcon,\n        color: colors.teal[600]\n      },\n      {\n        title: 'AB-',\n        value: dataArr[5],\n        icon: OpacityIcon,\n        color: colors.blue[600]\n      },\n      {\n        title: 'O+',\n        value: dataArr[6],\n        icon: OpacityIcon,\n        color: colors.indigo[600]\n      },\n      {\n        title: 'O-',\n        value: dataArr[7],\n        icon: OpacityIcon,\n        color: colors.purple[600]\n      }\n    ];\n  \n    const options = {\n      animation: false,\n      cutoutPercentage: 80,\n      layout: { padding: 0 },\n      legend: {\n        display: false\n      },\n      maintainAspectRatio: false,\n      responsive: true\n    };\n  \n    return (\n      <Card\n        className={className}\n        style={{height: '100%'}}\n        {...rest}\n      >\n        <CardHeader title=\"Inventory Overview\"/>\n        <Divider />\n        <CardContent>\n          <Box\n            height={300}\n            position=\"relative\"\n          >\n            <Doughnut\n              data={data}\n              options={options}\n            />\n          </Box>\n          <Box\n            display=\"flex\"\n            justifyContent=\"center\"\n            mt={2}\n          >\n            {devices.map(({\n              color,\n              icon: Icon,\n              title,\n              value\n            }) => (\n              <Box\n                key={title}\n                p={1}\n                textAlign=\"center\"\n              >\n                <Icon color=\"action\" />\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  {title}\n                </Typography>\n                <Typography\n                  style={{ color }}\n                  variant=\"h4\"\n                >\n                  {value}\n                  %\n                </Typography>\n              </Box>\n            ))}\n          </Box>\n        </CardContent>\n        <Divider />\n        <Box display=\"flex\" justifyContent=\"flex-end\" p={1}>\n          <Button\n            color=\"primary\"\n            endIcon={<ArrowRightIcon />}\n            size=\"small\"\n            variant=\"text\"\n            href=\"http://localhost:3000/app/manage_inventory\"\n          >\n            View details\n          </Button>\n        </Box>\n      </Card>\n    );\n  }\n} \n\nInventoryPie.propTypes = {\n  className: PropTypes.string\n};\n\nexport default InventoryPie;\n"]},"metadata":{},"sourceType":"module"}