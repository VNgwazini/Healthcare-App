{"ast":null,"code":"var _jsxFileName = \"/home/vusa/Wala_Digital/dashboard/src/views/request/RequestsListView/RequestsSent.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Button, Box, Card, CardHeader, Chip, Checkbox, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, FormGroup, Grid, IconButton, InputLabel, Popover, Select, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, TextField, Tooltip, Typography, makeStyles } from '@material-ui/core';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport FlightTakeoffIcon from '@material-ui/icons/FlightTakeoff';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport axios from 'axios';\nconst token = localStorage.jwt;\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  typography: {\n    padding: theme.spacing(1)\n  },\n  formControl: {\n    minWidth: 120,\n    width: \"100%\"\n  },\n  selectField: {\n    width: \"200px\"\n  },\n  textField: {\n    width: \"200px\"\n  }\n}));\n\nconst RequestsSent = ({\n  className,\n  requests,\n  suppliers,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const [openUpdate, setOpenUpdate] = React.useState(false);\n  const [openCancel, setOpenCancel] = React.useState(false);\n  const [openPopover, setOpenPopover] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [state, setState] = React.useState({\n    cancellationReason: \"None provided\"\n  });\n\n  const resetSelectedIDs = () => {\n    setSelectedCustomerIds([]);\n  };\n\n  const handleSelectAll = event => {\n    let newSelectedCustomerIds;\n\n    if (event.target.checked) {\n      newSelectedCustomerIds = requests.map(customer => customer.id);\n    } else {\n      newSelectedCustomerIds = [];\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomerIds.indexOf(id);\n    let newSelectedCustomerIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, selectedIndex), selectedCustomerIds.slice(selectedIndex + 1));\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n    console.log('Selected IDs: ', newSelectedCustomerIds);\n  };\n\n  const handleLimitChange = event => {\n    setLimit(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChange = event => {\n    setState(event.target.value);\n  };\n\n  const handleClickOpenUpdate = (event, id) => {\n    handleSelectOne(event, id);\n    setOpenUpdate(true);\n  };\n\n  const handleCloseUpdate = () => {\n    setOpenUpdate(false);\n    resetSelectedIDs();\n  };\n\n  const handleSubmitUpdate = props => {\n    let formData = new FormData(document.getElementById(\"updateMultiple\"));\n    var object = {};\n\n    for (var pair of formData.entries()) {\n      var key = pair[0];\n      var value = pair[1];\n\n      if (value != '') {\n        if (key === \"supplierIndex\") {\n          key = \"supplier\";\n          value = suppliers[value];\n        }\n\n        object[key] = value;\n      }\n    }\n\n    console.log(object);\n\n    for (let i in selectedCustomerIds) {\n      console.log(`${i}: `, selectedCustomerIds);\n      axios({\n        method: 'PUT',\n        url: `http://ec2-35-180-116-27.eu-west-3.compute.amazonaws.com:1337/blood-requests/${selectedCustomerIds[i]}`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        data: object\n      }) //handle success\n      .then(response => {\n        console.log(response.data);\n        handleCloseUpdate();\n      }) //handle error\n      .catch(error => console.error(`Error: ${error}`));\n      window.location.reload();\n    }\n  };\n\n  const handleClickOpenCancel = (event, id) => {\n    handleSelectOne(event, id);\n    setOpenCancel(true);\n  };\n\n  const handleCloseCancel = () => {\n    setOpenCancel(false);\n    resetSelectedIDs();\n  };\n\n  const handleSubmitCancel = () => {\n    let formData = new FormData(document.getElementById(\"cancelRequest\"));\n    let reason = formData.get(\"cancellationReason\");\n    console.log(reason);\n    axios({\n      method: 'PUT',\n      url: `http://ec2-35-180-116-27.eu-west-3.compute.amazonaws.com:1337/blood-requests/${selectedCustomerIds[0]}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      data: {\n        \"status\": \"canceled\",\n        \"cancellationReason\": reason\n      }\n    }).then(response => {\n      console.log(response);\n    }).catch(error => console.error(`Error: ${error}`));\n    window.location.reload();\n  };\n\n  const handleClickOpenPopover = (event, req) => {\n    handleSelectOne(event, req.id);\n    setAnchorEl(event.currentTarget);\n    var reason = req.cancellationReason ? req.cancellationReason : \"None provided\";\n    setState({\n      cancellationReason: reason\n    });\n    setOpenPopover(true);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(false);\n    setAnchorEl(null);\n    resetSelectedIDs();\n  };\n\n  const displayTable = requests => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      title: \"Your Requests\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      my: 3,\n      mx: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      open: openUpdate,\n      onClose: handleCloseUpdate,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      encType: \"multipart/form-data\",\n      onSubmit: handleSubmitUpdate,\n      method: \"post\",\n      id: \"updateMultiple\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      id: \"updateForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 19\n      }\n    }, \"Update Request\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }\n    }, \"To update a request, please enter the updated information here.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 86\n      }\n    }), \"Only fill out the fields that you want to update.\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"bloodGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 27\n      }\n    }, \"NEW Blood Group\"), /*#__PURE__*/React.createElement(Select, {\n      native: true,\n      id: \"bloodGroup\",\n      onChange: handleChange,\n      className: classes.selectField,\n      inputProps: {\n        name: 'bloodGroup',\n        id: 'bloodGroup'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      \"aria-label\": \"None\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"A+\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 29\n      }\n    }, \"A+\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"A-\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 29\n      }\n    }, \"A-\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"B+\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 29\n      }\n    }, \"B+\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"B-\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 29\n      }\n    }, \"B-\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"AB+\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 29\n      }\n    }, \"AB+\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"AB-\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 29\n      }\n    }, \"AB-\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"O+\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 29\n      }\n    }, \"O+\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"O-\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 29\n      }\n    }, \"O-\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"units\",\n      label: \"NEW Units\",\n      name: \"units\",\n      type: \"number\",\n      onChange: handleChange,\n      className: classes.textField,\n      InputProps: {\n        inputProps: {\n          min: 0\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"supplierIndex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 27\n      }\n    }, \"NEW Supplier\"), /*#__PURE__*/React.createElement(Select, {\n      native: true,\n      id: \"supplierIndex\",\n      onChange: handleChange,\n      className: classes.selectField,\n      inputProps: {\n        name: 'supplierIndex',\n        id: 'supplierIndex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      \"aria-label\": \"None\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 29\n      }\n    }), suppliers.map((supplier, index) => /*#__PURE__*/React.createElement(\"option\", {\n      value: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 31\n      }\n    }, supplier.name))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"requestType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 27\n      }\n    }, \"NEW Request Type\"), /*#__PURE__*/React.createElement(Select, {\n      native: true,\n      id: \"requestType\",\n      onChange: handleChange,\n      className: classes.selectField,\n      inputProps: {\n        name: 'requestType',\n        id: 'requestType'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      \"aria-label\": \"None\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"emergency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 29\n      }\n    }, \"Emergency\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"urgent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 29\n      }\n    }, \"Urgent\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 29\n      }\n    }, \"Standard\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"group_supply\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 29\n      }\n    }, \"Low\")))))), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: handleCloseUpdate,\n      color: \"primary\",\n      form: \"updateForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 21\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: handleSubmitUpdate,\n      color: \"primary\",\n      type: \"submit\",\n      form: \"updateForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 21\n      }\n    }, \"Submit\")))))), /*#__PURE__*/React.createElement(Box, {\n      my: 3,\n      mx: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      open: openCancel,\n      onClose: handleCloseCancel,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      encType: \"multipart/form-data\",\n      onSubmit: handleSubmitCancel,\n      method: \"post\",\n      id: \"cancelRequest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 19\n      }\n    }, \"Cancel Request\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 21\n      }\n    }, \"Before canceling a request, please enter the cancellation reason here.\"), /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      className: classes.formControl,\n      id: \"cancelRequestForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"cancellationReason\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 23\n      }\n    }, \"Cancellation Reason\"), /*#__PURE__*/React.createElement(Select, {\n      native: true,\n      onChange: handleChange,\n      className: classes.selectField,\n      inputProps: {\n        name: 'cancellationReason',\n        id: 'cancellationReason'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      \"aria-label\": \"None\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"reason_1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 25\n      }\n    }, \"reason_1\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"reason_2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 25\n      }\n    }, \"reason_2\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"reason_3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 25\n      }\n    }, \"reason_3\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"reason_4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 25\n      }\n    }, \"reason_4\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"other\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 25\n      }\n    }, \"other\")))), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: handleCloseCancel,\n      color: \"primary\",\n      form: \"cancelRequestForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 21\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: handleSubmitCancel,\n      color: \"primary\",\n      type: \"submit\",\n      form: \"cancelRequestForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 21\n      }\n    }, \"Submit\")))))), /*#__PURE__*/React.createElement(Popover, {\n      id: \"cancel-reason-popover\",\n      open: openPopover,\n      anchorEl: anchorEl,\n      onClose: handleClosePopover,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.typography,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }\n    }, \"Reason: \", state.cancellationReason)), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 15\n      }\n    }, \"Action\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 15\n      }\n    }, \"Creation Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 15\n      }\n    }, \"Last Updated\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 15\n      }\n    }, \"Blood Group\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 15\n      }\n    }, \"Units\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 15\n      }\n    }, \"Supplier\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 15\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 15\n      }\n    }, \"Request Type\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 15\n      }\n    }, \"Request ID\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }\n    }, requests.slice(page * limit, page * limit + limit).map(request => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      key: request.id,\n      selected: selectedCustomerIds.indexOf(request.id) !== -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      icon: request.status == \"canceled\" ? /*#__PURE__*/React.createElement(CancelIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 60\n        }\n      }) : request.deliveryMethod == \"dispatch\" ? /*#__PURE__*/React.createElement(LocalShippingIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 69\n        }\n      }) : /*#__PURE__*/React.createElement(FlightTakeoffIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 93\n        }\n      }),\n      label: request.status == \"canceled\" ? \"N/A\" : \"Sent\",\n      color: \"default\",\n      disabled: true,\n      style: request.status != \"pending\" ? {\n        display: \"inline-flex\"\n      } : {\n        display: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Update\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      color: \"primary\",\n      size: \"small\",\n      style: request.status == \"pending\" ? {\n        display: \"inline-flex\"\n      } : {\n        display: \"none\"\n      },\n      onClick: event => {\n        handleClickOpenUpdate(event, request.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(UpdateIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Cancel\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      color: \"primary\",\n      size: \"small\",\n      style: request.status == \"pending\" ? {\n        display: \"inline-flex\"\n      } : {\n        display: \"none\"\n      },\n      onClick: event => {\n        handleClickOpenCancel(event, request.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(CancelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 25\n      }\n    }))))), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 17\n      }\n    }, moment(request.createdAt).format('ll')), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 17\n      }\n    }, moment(request.updatedAt).format('ll')), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 17\n      }\n    }, request.bloodGroup), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 17\n      }\n    }, request.units), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 17\n      }\n    }, request.supplier ? request.supplier.name : \"Finding supplier...\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Click to view reason\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      id: \"popover-chip\",\n      color: \"primary\",\n      label: request.status,\n      size: \"small\",\n      style: request.status == \"canceled\" ? {\n        display: \"inline-flex\"\n      } : {\n        display: \"none\"\n      },\n      onClick: event => {\n        handleClickOpenPopover(event, request);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Chip, {\n      color: request.status == \"pending\" ? \"primary\" : \"default\",\n      label: request.status,\n      size: \"small\",\n      style: request.status == \"canceled\" ? {\n        display: \"none\"\n      } : {\n        display: \"inline-flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 17\n      }\n    }, request.requestType), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 17\n      }\n    }, request.id.slice(17)))))))));\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    minWidth: 1050,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 9\n    }\n  }, displayTable(requests))), /*#__PURE__*/React.createElement(TablePagination, {\n    component: \"div\",\n    count: requests.length,\n    onChangePage: handlePageChange,\n    onChangeRowsPerPage: handleLimitChange,\n    page: page,\n    rowsPerPage: limit,\n    rowsPerPageOptions: [10, 25, 50, 100],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 7\n    }\n  }));\n};\n\nRequestsSent.propTypes = {\n  className: PropTypes.string\n};\nexport default RequestsSent;","map":{"version":3,"sources":["/home/vusa/Wala_Digital/dashboard/src/views/request/RequestsListView/RequestsSent.js"],"names":["React","useState","clsx","moment","PropTypes","PerfectScrollbar","Button","Box","Card","CardHeader","Chip","Checkbox","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","FormGroup","Grid","IconButton","InputLabel","Popover","Select","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TextField","Tooltip","Typography","makeStyles","CancelIcon","UpdateIcon","FlightTakeoffIcon","LocalShippingIcon","FormControlLabel","axios","token","localStorage","jwt","useStyles","theme","root","avatar","marginRight","spacing","typography","padding","formControl","minWidth","width","selectField","textField","RequestsSent","className","requests","suppliers","rest","classes","selectedCustomerIds","setSelectedCustomerIds","limit","setLimit","page","setPage","openUpdate","setOpenUpdate","openCancel","setOpenCancel","openPopover","setOpenPopover","anchorEl","setAnchorEl","state","setState","cancellationReason","resetSelectedIDs","handleSelectAll","event","newSelectedCustomerIds","target","checked","map","customer","id","handleSelectOne","selectedIndex","indexOf","concat","slice","length","console","log","handleLimitChange","parseInt","value","handlePageChange","newPage","handleChange","handleClickOpenUpdate","handleCloseUpdate","handleSubmitUpdate","props","formData","FormData","document","getElementById","object","pair","entries","key","i","method","url","headers","Authorization","data","then","response","catch","error","window","location","reload","handleClickOpenCancel","handleCloseCancel","handleSubmitCancel","reason","get","handleClickOpenPopover","req","currentTarget","handleClosePopover","displayTable","name","inputProps","min","supplier","index","vertical","horizontal","textAlign","request","status","deliveryMethod","display","createdAt","format","updatedAt","bloodGroup","units","requestType","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Button,\n  Box,\n  Card,\n  CardHeader,\n  Chip,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormGroup,\n  Grid,\n  IconButton,\n  InputLabel,\n  Popover,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  Tooltip,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport FlightTakeoffIcon from '@material-ui/icons/FlightTakeoff';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport axios from 'axios';\n\nconst token = localStorage.jwt;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  typography: {\n    padding: theme.spacing(1),\n  },\n  formControl: {\n    minWidth: 120,\n    width: \"100%\"\n  },\n  selectField: {\n    width: \"200px\"\n  },\n  textField: {\n    width: \"200px\"\n  }\n}));\n\nconst RequestsSent = ({ className, requests, suppliers, ...rest }) => {\n  const classes = useStyles();\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const [openUpdate, setOpenUpdate] = React.useState(false);\n  const [openCancel, setOpenCancel] = React.useState(false);\n  const [openPopover, setOpenPopover] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [state, setState] = React.useState({\n    cancellationReason: \"None provided\"\n  });\n\n  const resetSelectedIDs = () => {\n    setSelectedCustomerIds([]);\n  }\n\n  const handleSelectAll = (event) => {\n    let newSelectedCustomerIds;\n\n    if (event.target.checked) {\n      newSelectedCustomerIds = requests.map((customer) => customer.id);\n    } else {\n      newSelectedCustomerIds = [];\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomerIds.indexOf(id);\n    let newSelectedCustomerIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\n        selectedCustomerIds.slice(0, selectedIndex),\n        selectedCustomerIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n    console.log('Selected IDs: ', newSelectedCustomerIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChange = (event) => {\n    setState(event.target.value);\n  };\n\n  const handleClickOpenUpdate = (event, id) => {\n    handleSelectOne(event,id);\n    setOpenUpdate(true);\n  };\n\n\n  const handleCloseUpdate = () => {\n    setOpenUpdate(false);\n    resetSelectedIDs();\n  };\n\n  const handleSubmitUpdate = (props) => {\n    let formData =  new FormData(document.getElementById(\"updateMultiple\"));\n    var object = {};\n    for (var pair of formData.entries()) {\n      var key = pair[0];\n      var value = pair[1];\n      if (value != '') {\n        if (key === \"supplierIndex\") { \n          key = \"supplier\"; \n          value = suppliers[value];\n        }\n        object[key] = value;\n      }\n    }\n    console.log(object);\n    for(let i in selectedCustomerIds){\n      console.log(`${i}: `,selectedCustomerIds);\n      axios({\n        method: 'PUT',\n        url: `http://ec2-35-180-116-27.eu-west-3.compute.amazonaws.com:1337/blood-requests/${selectedCustomerIds[i]}`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        data: object\n      })\n      //handle success\n      .then((response) => {\n        console.log(response.data);\n        handleCloseUpdate();      \n      })\n      //handle error\n      .catch(error => console.error(`Error: ${error}`));\n      window.location.reload();\n    }\n  };\n\n  const handleClickOpenCancel = (event, id) => {\n    handleSelectOne(event,id);\n    setOpenCancel(true);\n  };\n\n  const handleCloseCancel = () => {\n    setOpenCancel(false);\n    resetSelectedIDs();\n  };\n\n  const handleSubmitCancel = () => {\n    let formData =  new FormData(document.getElementById(\"cancelRequest\"));\n    let reason = formData.get(\"cancellationReason\");\n    console.log(reason);\n    axios({\n      method: 'PUT',\n      url: `http://ec2-35-180-116-27.eu-west-3.compute.amazonaws.com:1337/blood-requests/${selectedCustomerIds[0]}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      data: {\"status\": \"canceled\", \"cancellationReason\": reason}\n    })\n    .then((response) => {\n      console.log(response);    \n    })\n    .catch(error => console.error(`Error: ${error}`));\n    window.location.reload();\n  }\n\n  const handleClickOpenPopover = (event, req) => {\n    handleSelectOne(event, req.id);\n    setAnchorEl(event.currentTarget);\n    var reason = req.cancellationReason ? req.cancellationReason : \"None provided\";\n    setState({\n      cancellationReason: reason\n    })\n    setOpenPopover(true);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(false);\n    setAnchorEl(null);\n    resetSelectedIDs();\n  };\n\n  const displayTable = (requests) => {\n    return (\n      <>\n        <Card>\n          <CardHeader title=\"Your Requests\" />\n          <Box my={3} mx={3}>\n            <Dialog open={openUpdate} onClose={handleCloseUpdate} aria-labelledby=\"form-dialog-title\">\n              <form encType=\"multipart/form-data\" onSubmit={handleSubmitUpdate}  method=\"post\" id=\"updateMultiple\">\n                <FormGroup id=\"updateForm\">\n                  <DialogTitle id=\"form-dialog-title\">Update Request</DialogTitle>\n                  <DialogContent>\n                    <DialogContentText>\n                      To update a request, please enter the updated information here.<br/>\n                      Only fill out the fields that you want to update.\n                    </DialogContentText>\n                    <Grid container spacing={2}>\n                      <Grid item xs={6}>\n                        <FormControl className={classes.formControl}>\n                          <InputLabel htmlFor=\"bloodGroup\">NEW Blood Group</InputLabel>\n                          <Select\n                            native\n                            id=\"bloodGroup\"\n                            onChange={handleChange}\n                            className={classes.selectField}\n                            inputProps={{\n                              name: 'bloodGroup',\n                              id: 'bloodGroup',\n                            }}\n                          >\n                            <option aria-label=\"None\" value=\"\" />\n                            <option value=\"A+\">A+</option>\n                            <option value=\"A-\">A-</option>\n                            <option value=\"B+\">B+</option>\n                            <option value=\"B-\">B-</option>\n                            <option value=\"AB+\">AB+</option>\n                            <option value=\"AB-\">AB-</option>\n                            <option value=\"O+\">O+</option>\n                            <option value=\"O-\">O-</option>\n                          </Select>\n                        </FormControl>\n                      </Grid>\n                      <Grid item xs={6}>\n                        <TextField\n                          id=\"units\"\n                          label=\"NEW Units\"\n                          name=\"units\"\n                          type=\"number\"\n                          onChange={handleChange}\n                          className={classes.textField}\n                          InputProps={{inputProps: {min: 0}}}\n                        />\n                      </Grid>\n                      <Grid item xs={6}>\n                        <FormControl>\n                          <InputLabel htmlFor=\"supplierIndex\">NEW Supplier</InputLabel>\n                          <Select\n                            native\n                            id=\"supplierIndex\"\n                            onChange={handleChange}\n                            className={classes.selectField}\n                            inputProps={{\n                              name: 'supplierIndex',\n                              id: 'supplierIndex',\n                            }}\n                          >\n                            <option aria-label=\"None\" value=\"\" />\n                            {suppliers.map((supplier, index) => \n                              <option value={index}>{supplier.name}</option>\n                            )}\n                          </Select>\n                        </FormControl>\n                      </Grid>\n                      <Grid item xs={6}>\n                        <FormControl>\n                          <InputLabel htmlFor=\"requestType\">NEW Request Type</InputLabel>\n                          <Select\n                            native\n                            id=\"requestType\"\n                            onChange={handleChange}\n                            className={classes.selectField}\n                            inputProps={{\n                              name: 'requestType',\n                              id: 'requestType',\n                            }}\n                          >\n                            <option aria-label=\"None\" value=\"\" />\n                            <option value=\"emergency\">Emergency</option>\n                            <option value=\"urgent\">Urgent</option>\n                            <option value=\"standard\">Standard</option>\n                            <option value=\"group_supply\">Low</option>\n                          </Select>\n                        </FormControl>\n                      </Grid>\n                    </Grid>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleCloseUpdate} color=\"primary\" form=\"updateForm\">\n                      Cancel\n                    </Button>\n                    <Button onClick={handleSubmitUpdate} color=\"primary\" type=\"submit\" form=\"updateForm\">\n                      Submit\n                    </Button>\n                  </DialogActions>\n                </FormGroup>\n              </form>\n            </Dialog>\n          </Box>\n          <Box my={3} mx={3}>\n            <Dialog open={openCancel} onClose={handleCloseCancel} aria-labelledby=\"form-dialog-title\">\n              <form encType=\"multipart/form-data\" onSubmit={handleSubmitCancel}  method=\"post\" id=\"cancelRequest\">\n                <FormGroup>\n                  <DialogTitle id=\"form-dialog-title\">Cancel Request</DialogTitle>\n                  <DialogContent>\n                    <DialogContentText>\n                      Before canceling a request, please enter the cancellation reason here.\n                    </DialogContentText>\n                    <FormControl required className={classes.formControl} id=\"cancelRequestForm\">\n                      <InputLabel htmlFor=\"cancellationReason\">Cancellation Reason</InputLabel>\n                      <Select\n                        native\n                        onChange={handleChange}\n                        className={classes.selectField}\n                        inputProps={{\n                          name: 'cancellationReason',\n                          id: 'cancellationReason',\n                        }}\n                      >\n                        <option aria-label=\"None\" value=\"\" />\n                        <option value=\"reason_1\">reason_1</option>\n                        <option value=\"reason_2\">reason_2</option>\n                        <option value=\"reason_3\">reason_3</option>\n                        <option value=\"reason_4\">reason_4</option>\n                        <option value=\"other\">other</option>\n                      </Select>\n                    </FormControl>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleCloseCancel} color=\"primary\" form=\"cancelRequestForm\">\n                      Cancel\n                    </Button>\n                    <Button onClick={handleSubmitCancel} color=\"primary\" type=\"submit\" form=\"cancelRequestForm\">\n                      Submit\n                    </Button>\n                  </DialogActions>\n                </FormGroup>\n              </form>\n            </Dialog>\n          </Box>\n        <Popover\n          id=\"cancel-reason-popover\"\n          open={openPopover}\n          anchorEl={anchorEl}\n          onClose={handleClosePopover}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n        >\n          <Typography className={classes.typography}>Reason: {state.cancellationReason}</Typography>\n        </Popover>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell style={{textAlign: \"center\"}}>\n                Action\n              </TableCell>\n              <TableCell>\n                Creation Date\n              </TableCell>\n              <TableCell>\n                Last Updated\n              </TableCell>\n              <TableCell>\n                Blood Group\n              </TableCell>\n              <TableCell>\n                Units\n              </TableCell>\n              <TableCell>\n                Supplier\n              </TableCell>\n              {/* <TableCell>\n                Delivery Method\n              </TableCell> */}\n              <TableCell>\n                Status\n              </TableCell>\n              <TableCell>\n                Request Type\n              </TableCell>\n              <TableCell>\n                Request ID\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {requests\n            .slice(page * limit, page * limit + limit)\n            .map((request) => (\n            <>\n              <TableRow\n                hover\n                key={request.id}\n                selected={selectedCustomerIds.indexOf(request.id) !== -1}\n              >\n                <TableCell>\n                  <div style={{textAlign: \"center\"}}>\n                    <Chip \n                      icon={request.status == \"canceled\" ? <CancelIcon /> \n                          : (request.deliveryMethod == \"dispatch\" ? <LocalShippingIcon /> : <FlightTakeoffIcon />)} \n                      label={request.status == \"canceled\" ? \"N/A\" : \"Sent\"}\n                      color=\"default\"\n                      disabled\n                      style={request.status != \"pending\" ? {display: \"inline-flex\"} : {display: \"none\"}}\n                    />\n                    <Tooltip title=\"Update\" placement=\"top\">\n                      <IconButton\n                        color=\"primary\"\n                        size=\"small\"\n                        style={request.status == \"pending\" ? {display: \"inline-flex\"} : {display: \"none\"}}\n                        onClick={(event) => {handleClickOpenUpdate(event,request.id)}}\n                      >\n                        <UpdateIcon/>\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Cancel\" placement=\"top\">\n                      <IconButton \n                        color=\"primary\"\n                        size=\"small\"\n                        style={request.status == \"pending\" ? {display: \"inline-flex\"} : {display: \"none\"}}\n                        onClick={(event) => {handleClickOpenCancel(event,request.id)}}\n                      >\n                        <CancelIcon/>\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  {moment(request.createdAt).format('ll')}\n                </TableCell>\n                <TableCell>\n                  {moment(request.updatedAt).format('ll')}\n                </TableCell>\n                <TableCell>\n                  {request.bloodGroup}\n                </TableCell>\n                <TableCell>\n                  {request.units}\n                </TableCell>\n                <TableCell>\n                  {request.supplier ? request.supplier.name : \"Finding supplier...\"}\n                </TableCell>\n                {/* <TableCell>\n                  {request.deliveryMethod}\n                </TableCell> */}\n                <TableCell>\n                  <Tooltip title=\"Click to view reason\" placement=\"top\">\n                    <Chip \n                      id=\"popover-chip\" \n                      color=\"primary\" \n                      label={request.status} \n                      size=\"small\" \n                      style={request.status == \"canceled\" ? {display: \"inline-flex\"} : {display: \"none\"}}\n                      onClick={(event) => {handleClickOpenPopover(event, request)}}\n                    />\n                  </Tooltip>\n                  <Chip \n                    color={request.status==\"pending\" ? \"primary\" : \"default\"} \n                    label={request.status} \n                    size=\"small\" \n                    style={request.status == \"canceled\" ? {display: \"none\"} : {display: \"inline-flex\"}}\n                  />\n                </TableCell>\n                <TableCell>\n                  {request.requestType}\n                </TableCell>\n                <TableCell>\n                  {request.id.slice(17)}\n                </TableCell>\n              </TableRow>\n              </>\n            ))}\n          </TableBody>\n        </Table>\n      </Card>\n      </>\n    )\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <PerfectScrollbar>\n        <Box minWidth={1050}>\n          {displayTable(requests)}\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={requests.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[10, 25, 50, 100]}\n      />\n    </Card>\n  );\n};\n\nRequestsSent.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default RequestsSent;\n"]},"metadata":{},"sourceType":"module"}