{"ast":null,"code":"var _jsxFileName = \"/home/vusa/Portfolio/Healthcare-App/dashboard/src/views/product/ManageInventoryListView/Toolbar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Box, FormGroup, Button, Card, CardContent, Grid, InputLabel, Select, TextField, InputAdornment, SvgIcon, makeStyles, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl } from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport axios from 'axios';\nimport moment from 'moment';\nconst token = localStorage.jwt;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    overflowX: \"auto\"\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  formControl: {},\n  selectEmpty: {\n    marginTop: theme.spacing(1)\n  },\n  textField: {\n    width: \"200px\"\n  },\n  selectField: {\n    width: \"200px\"\n  }\n}));\n\nconst Toolbar = ({\n  className,\n  donors,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [state, setState] = React.useState('');\n  const [curDonor, setCurDonor] = React.useState('');\n\n  const handleChange = event => {\n    setState(event.target.value);\n  };\n\n  const handleDonorChange = event => {\n    // since the \"value\" of the donor field in the form\n    // is the index of the donor in the donors list passed in:\n    setCurDonor(donors[event.target.value]);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setCurDonor('');\n  };\n\n  const handleSubmit = props => {\n    let formData = new FormData(document.getElementById(\"makeDonation\"));\n    const expirationDate = new Date(formData.get(\"expiration\"));\n    expirationDate.setDate(expirationDate.getDate() + 1);\n    axios({\n      method: 'POST',\n      url: 'http://localhost:1337/bloodsupplies',\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      data: {\n        user: user,\n        bloodBank: user.bloodBank,\n        bloodDonor: donors[formData.get(\"donorIndex\")],\n        usage: formData.get(\"usage\") == '' ? \"unassigned\" : formData.get(\"usage\"),\n        expiration: expirationDate.toISOString()\n      }\n    }).then(response => {\n      console.log(response.data);\n      handleClose();\n      setCurDonor('');\n      window.location.reload();\n    }).catch(error => console.error(`Error: ${error}`));\n  };\n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Make Donation\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    encType: \"multipart/form-data\",\n    onSubmit: handleSubmit,\n    method: \"post\",\n    id: \"makeDonation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    id: \"donationForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, \"Make a Donation\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"To make a new donation entry, please enter the relevant information below.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 93\n    }\n  }), \"If the donor is not listed in the options, please go to the \\\"Manage Donors\\\" page and create a new donor.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 123\n    }\n  }), \"All fields are required.\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    required: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"donorIndex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 23\n    }\n  }, \"Donor\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    onChange: handleDonorChange,\n    className: classes.selectField,\n    inputProps: {\n      name: 'donorIndex',\n      id: 'donorIndex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }), donors.map((donor, index) => /*#__PURE__*/React.createElement(\"option\", {\n    value: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 27\n    }\n  }, donor.lastName + \", \" + donor.firstName))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Donor's Blood Group\",\n    value: curDonor.bloodGroup,\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    required: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"expiration\",\n    label: \"Expiration Date\",\n    name: \"expiration\",\n    type: \"date\",\n    defaultValue: moment(new Date().setHours(new Date().getHours() + 24 * 45)).toISOString().slice(0, 10),\n    value: state.expiration,\n    onChange: handleChange,\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"usage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 23\n    }\n  }, \"Usage\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    onChange: handleChange,\n    className: classes.selectField,\n    inputProps: {\n      name: 'usage',\n      id: 'usage'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"internal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 25\n    }\n  }, \"internal\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"unassigned\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }, \"unassigned\")))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    form: \"donationForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    color: \"primary\",\n    type: \"submit\",\n    form: \"donationForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, \"Submit\")))))));\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\nexport default Toolbar;","map":{"version":3,"sources":["/home/vusa/Portfolio/Healthcare-App/dashboard/src/views/product/ManageInventoryListView/Toolbar.js"],"names":["React","PropTypes","clsx","Box","FormGroup","Button","Card","CardContent","Grid","InputLabel","Select","TextField","InputAdornment","SvgIcon","makeStyles","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","Search","SearchIcon","axios","moment","token","localStorage","jwt","useStyles","theme","root","width","overflowX","importButton","marginRight","spacing","exportButton","formControl","selectEmpty","marginTop","textField","selectField","Toolbar","className","donors","rest","classes","open","setOpen","useState","state","setState","curDonor","setCurDonor","handleChange","event","target","value","handleDonorChange","handleClickOpen","handleClose","handleSubmit","props","formData","FormData","document","getElementById","expirationDate","Date","get","setDate","getDate","method","url","headers","Authorization","data","user","bloodBank","bloodDonor","usage","expiration","toISOString","then","response","console","log","window","location","reload","catch","error","JSON","parse","getItem","name","id","map","donor","index","lastName","firstName","bloodGroup","shrink","setHours","getHours","slice","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  FormGroup,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  InputLabel,\n  Select,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport axios from 'axios';\nimport moment from 'moment';\n\nconst token = localStorage.jwt;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    overflowX: \"auto\"\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  formControl: {},\n  selectEmpty: {\n    marginTop: theme.spacing(1),\n  },\n  textField: {\n    width: \"200px\"\n  },\n  selectField: {\n    width: \"200px\"\n  }\n}));\n\nconst Toolbar = ({ className, donors, ...rest }) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [state, setState] = React.useState('');\n  const [curDonor, setCurDonor] = React.useState('');\n\n  const handleChange = (event) => {\n    setState(event.target.value);\n  };\n\n  const handleDonorChange = (event) => {\n    // since the \"value\" of the donor field in the form\n    // is the index of the donor in the donors list passed in:\n    setCurDonor(donors[event.target.value]);\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setCurDonor('');\n  };\n  \n  const handleSubmit = (props) => {\n    let formData =  new FormData(document.getElementById(\"makeDonation\"));\n    const expirationDate = new Date(formData.get(\"expiration\"));\n    expirationDate.setDate(expirationDate.getDate() + 1);\n\n    axios({\n      method: 'POST',\n      url: 'http://localhost:1337/bloodsupplies',\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      data: {\n        user: user,\n        bloodBank: user.bloodBank,\n        bloodDonor: donors[formData.get(\"donorIndex\")],\n        usage: (formData.get(\"usage\") == '' ? \"unassigned\" : formData.get(\"usage\")),\n        expiration: expirationDate.toISOString()\n      } \n    })\n    .then((response) => {\n      console.log(response.data);\n      handleClose();\n      setCurDonor('');\n      window.location.reload();\n    })\n    .catch(error => console.error(`Error: ${error}`));\n  };\n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={handleClickOpen}\n        >\n          Make Donation\n        </Button>\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n          <form encType=\"multipart/form-data\" onSubmit={handleSubmit}  method=\"post\" id=\"makeDonation\">\n            <FormGroup id=\"donationForm\">\n              <DialogTitle id=\"form-dialog-title\">Make a Donation</DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  To make a new donation entry, please enter the relevant information below.<br/>\n                  If the donor is not listed in the options, please go to the \"Manage Donors\" page and create a new donor.<br/>\n                  All fields are required.\n                </DialogContentText>\n                <Grid container spacing={2}>\n                  <Grid item xs={6}>\n                    <FormControl required className={classes.formControl}>\n                      <InputLabel htmlFor=\"donorIndex\">Donor</InputLabel>\n                      <Select\n                        native\n                        onChange={handleDonorChange}\n                        className={classes.selectField}\n                        inputProps={{\n                          name: 'donorIndex',\n                          id: 'donorIndex',\n                        }}\n                      >\n                        <option aria-label=\"None\" value=\"\" />\n                        {donors.map((donor, index) => \n                          <option value={index}>{donor.lastName + \", \" + donor.firstName}</option>\n                        )}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <FormControl className={classes.formControl}>\n                      <TextField\n                        label=\"Donor's Blood Group\"\n                        value={curDonor.bloodGroup}\n                        className={classes.textField}\n                        InputLabelProps={{\n                          shrink: true\n                        }}\n                        disabled\n                      />\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <FormControl required className={classes.formControl}>\n                      <TextField\n                        id=\"expiration\"\n                        label=\"Expiration Date\"\n                        name=\"expiration\"\n                        type=\"date\"\n                        defaultValue={moment(new Date().setHours(new Date().getHours()+(24*45))).toISOString().slice(0, 10)}\n                        value={state.expiration}\n                        onChange={handleChange}\n                        className={classes.textField}\n                        InputLabelProps={{\n                          shrink: true\n                        }}\n                      />\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <FormControl className={classes.formControl}>\n                      <InputLabel htmlFor=\"usage\">Usage</InputLabel>\n                      <Select\n                        native\n                        onChange={handleChange}\n                        className={classes.selectField}\n                        inputProps={{\n                          name: 'usage',\n                          id: 'usage',\n                        }}\n                      >\n                        <option aria-label=\"None\" value=\"\" />\n                        <option value=\"internal\">internal</option>\n                        <option value=\"unassigned\">unassigned</option>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} color=\"primary\" form=\"donationForm\">\n                  Cancel\n                </Button>\n                <Button onClick={handleSubmit} color=\"primary\" type=\"submit\" form=\"donationForm\">\n                  Submit\n                </Button>\n              </DialogActions>\n            </FormGroup>\n          </form>\n        </Dialog>\n      </Box>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n"]},"metadata":{},"sourceType":"module"}